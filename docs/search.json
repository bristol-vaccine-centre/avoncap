[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Bristol Vaccine Institute Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/avoncap.html","id":"input-data-location","dir":"Articles","previous_headings":"","what":"Input data location","title":"Getting started","text":"first level directories. Filenames need indication database year (either 20-21,21-22,… y1,y2,…)","code":"# The data input directory on my development machine: options(\"avoncap.input\" = \"~/Data/avoncap/\")  # The directory structure: fs::dir_tree(path = avoncap::input(),glob=\"*/cache/*\",invert=TRUE) #> /home/vp22681/Data/avoncap #> ├── avoncap-export #> │   ├── 2022-03-22 #> │   │   ├── central_y1.csv #> │   │   └── central_y2.csv #> │   ├── 2022-06-20 #> │   │   ├── central_y1.csv #> │   │   └── central_y2.csv #> │   ├── 2022-07-11 #> │   │   ├── central_y1.csv #> │   │   └── central_y2.csv #> │   ├── 2022-09-21 #> │   │   ├── central_y1.csv #> │   │   └── central_y2.csv #> │   ├── 2022-10-07 #> │   │   └── uad-controls.csv #> │   ├── 2022-11-09 #> │   │   ├── central_y1.csv #> │   │   ├── central_y2.csv #> │   │   └── uad-controls.csv #> │   ├── 2023-03-02 #> │   │   ├── central_y1.csv #> │   │   ├── central_y2.csv #> │   │   └── central_y3.csv #> │   ├── 22-23 codebook NBT.pdf #> │   ├── 22-23 codebook UHBW.pdf #> │   ├── Avon CAP - LRTD Patients 21-22 _ REDCap codebook.pdf #> │   ├── Avon CAP - LRTD central database 20-21 _ REDCap.pdf #> │   ├── AvonCAP Pneumococcus Codebook.pdf #> │   ├── AvonCAP field validity.xlsx #> │   └── README.md #> ├── avoncap.yaml #> ├── cache #> ├── downloads #> │   └── README.md #> ├── ethnicity #> │   ├── 2022-07-12 #> │   │   ├── y1.csv #> │   │   └── y2.csv #> │   ├── 2022-10-27 #> │   │   ├── y1.csv #> │   │   └── y2.csv #> │   └── README.md #> ├── google-mobility #> │   └── Global_Mobility_Report.csv #> ├── ltla-incidence #> │   ├── ltla_2022-02-28.csv #> │   └── ltla_2022-03-18.csv #> ├── maybe_some_useful_files_data.zip #> ├── metadata #> │   ├── 2022-10-24 #> │   │   ├── central_y1.csv #> │   │   ├── central_y2.csv #> │   │   ├── central_y3.csv #> │   │   └── uad-controls.csv #> │   ├── 2022-11-29 #> │   │   └── pneumococcal.csv #> │   └── README.md #> ├── metadata-review #> │   ├── 2022-10-25 #> │   │   └── metadata-review.csv #> │   ├── AvonCAP 21-22 markred.xlsx #> │   └── AvonCAP data dictionary - fields.csv #> ├── nhs-extract #> │   ├── 2022-07-11 #> │   │   ├── deltave_BRI_y1.csv #> │   │   ├── deltave_BRI_y2.csv #> │   │   ├── deltave_NBT_y1.csv #> │   │   └── deltave_NBT_y2.csv #> │   ├── 2022-09-20 #> │   │   ├── deltave_BRI_y1.csv #> │   │   ├── deltave_BRI_y2.csv #> │   │   ├── deltave_BRI_y3.csv #> │   │   ├── deltave_NBT_y1.csv #> │   │   ├── deltave_NBT_y2.csv #> │   │   └── deltave_NBT_y3.csv #> │   ├── 2022-11-16 #> │   │   ├── deltave_BRI_y1.csv #> │   │   ├── deltave_BRI_y2.csv #> │   │   ├── deltave_BRI_y3.csv #> │   │   ├── deltave_NBT_y1.csv #> │   │   ├── deltave_NBT_y2.csv #> │   │   └── deltave_NBT_y3.csv #> │   ├── 2022-11-29 #> │   │   └── pneumococcal.csv #> │   ├── 2022-11-30 #> │   │   ├── deltave_BRI_y1.csv #> │   │   ├── deltave_BRI_y2.csv #> │   │   ├── deltave_BRI_y3.csv #> │   │   ├── deltave_NBT_y1.csv #> │   │   ├── deltave_NBT_y2.csv #> │   │   └── deltave_NBT_y3.csv #> │   ├── 2022-12-07 #> │   │   ├── deltave_BRI_y1.csv #> │   │   ├── deltave_BRI_y2.csv #> │   │   ├── deltave_BRI_y3.csv #> │   │   ├── deltave_NBT_y1.csv #> │   │   ├── deltave_NBT_y2.csv #> │   │   └── deltave_NBT_y3.csv #> │   ├── 2022-12-20 #> │   │   └── ipd_avoncap_linkage.csv #> │   ├── 2023-02-07 #> │   │   └── pneumococcal.csv #> │   ├── README.md #> │   └── old #> │       ├── AdmissionDateByStudyNumber_2022-07-12.csv #> │       └── DeltaVE_04042022.csv #> ├── spim-seroprevalence #> │   └── week15_2022_seroprev_modellers.csv #> └── urine-antigens #>     ├── 2022-09-15 #>     │   └── uad-cases.csv #>     ├── B1851202_SAP V1.0-27Sep2021_Final.pdf #>     ├── README.md #>     └── Table Template Serotype Distribution Scientific Affairs Proposal_FINAL.docx # get the most recent files avoncap::most_recent_files(\"ethnicity\") #> # A tibble: 2 × 7 #>   filename directory path                date       hospital study_year filetype #>   <chr>    <chr>     <fs::path>          <date>     <chr>         <int> <chr>    #> 1 y1       ethnicity …/2022-10-27/y1.csv 2022-10-27 NA               NA csv      #> 2 y2       ethnicity …/2022-10-27/y2.csv 2022-10-27 NA               NA csv # devtools::load_all() try(avoncap::load_data(\"missing\")) #> No suitable files matching \"missing\", before date: 2023-03-28. Try one of:  #> as an input to 'type' #> Error in avoncap::load_data(\"missing\") : aborting."},{"path":"/articles/avoncap.html","id":"load-data-sources-and-recording-provenance","dir":"Articles","previous_headings":"","what":"Load data sources and recording provenance","title":"Getting started","text":"","code":"ethn = avoncap::load_data(\"ethnicity\") #> using cached item: ~/.cache/avoncap/data-969416e3870a1ceaa091ca0c1e17ce42-ff72608b64773903d114b82c59072820.rda avoncap::most_recent_files(\"nhs-extract\",\"deltave\") #> # A tibble: 6 × 7 #>   filename       directory   path        date       hospital study_year filetype #>   <chr>          <chr>       <fs::path>  <date>     <chr>         <int> <chr>    #> 1 deltave_BRI_y1 nhs-extract …BRI_y1.csv 2022-12-07 BRI               1 csv      #> 2 deltave_BRI_y2 nhs-extract …BRI_y2.csv 2022-12-07 BRI               2 csv      #> 3 deltave_BRI_y3 nhs-extract …BRI_y3.csv 2022-12-07 BRI               3 csv      #> 4 deltave_NBT_y1 nhs-extract …NBT_y1.csv 2022-12-07 NBT               1 csv      #> 5 deltave_NBT_y2 nhs-extract …NBT_y2.csv 2022-12-07 NBT               2 csv      #> 6 deltave_NBT_y3 nhs-extract …NBT_y3.csv 2022-12-07 NBT               3 csv rawData = avoncap::load_data(\"nhs-extract\",\"deltave\") #> using cached item: ~/.cache/avoncap/data-969416e3870a1ceaa091ca0c1e17ce42-2455e2e169f1b657eeece521d9a79582.rda # rawData = avoncap::load_data(\"nhs-extract\",\"deltave\",merge = FALSE) avoncap::save_data_source_info(ethn, rawData, .file = tempfile(\"file-info\",fileext = \".txt\")) #> # A tibble: 8 × 2 #>   path                                                                 md5       #>   <chr>                                                                <chr>     #> 1 /home/vp22681/Data/avoncap/ethnicity/2022-10-27/y1.csv               c3ad7992… #> 2 /home/vp22681/Data/avoncap/ethnicity/2022-10-27/y2.csv               ce23f5ae… #> 3 /home/vp22681/Data/avoncap/nhs-extract/2022-12-07/deltave_BRI_y1.csv 66825a94… #> 4 /home/vp22681/Data/avoncap/nhs-extract/2022-12-07/deltave_BRI_y2.csv cbd04cf3… #> 5 /home/vp22681/Data/avoncap/nhs-extract/2022-12-07/deltave_BRI_y3.csv b2fd0723… #> 6 /home/vp22681/Data/avoncap/nhs-extract/2022-12-07/deltave_NBT_y1.csv f61195e9… #> 7 /home/vp22681/Data/avoncap/nhs-extract/2022-12-07/deltave_NBT_y2.csv be0456bb… #> 8 /home/vp22681/Data/avoncap/nhs-extract/2022-12-07/deltave_NBT_y3.csv 49d5d4ed…"},{"path":"/articles/avoncap.html","id":"normalising-data","dir":"Articles","previous_headings":"","what":"Normalising data","title":"Getting started","text":"","code":"# devtools::install_local(force=TRUE) normData = rawData %>% avoncap::normalise_data() #> Normalising data using: normalise.nhs_extract.deltave #> Some columns expected in the mappings were not present: what_was_the_first_surveil #> using cached item: ~/.cache/avoncap/norm-0ef4812a2d1bc751062531c384a2b89e-d67101ca02e4cd75528f3cf3f5934e6d.rda"},{"path":"/articles/avoncap.html","id":"mapping-columns","dir":"Articles","previous_headings":"","what":"Mapping columns","title":"Getting started","text":"","code":"# Successfully mapped columns # attr(normData,\"mapped\")  # Columns that are present in the normData but not mapped attr(normData,\"unmapped\") #> [1] \".spec_other_resp\"    \".spec_other_cardiac\" \".c19_compother\"  # Columns not present in the normData for which mapping rules were supplied attr(normData,\"missing\") #> [1] \"what_was_the_first_surveil\""},{"path":"/articles/avoncap.html","id":"original-field-names-and-labels-","dir":"Articles","previous_headings":"","what":"Original field names, and labels.","title":"Getting started","text":"","code":"# devtools::load_all()  # generate a set of readable label mappings from column to printable name for the whole normData set # overriding a particular label # readable_label_mapping(normData, demog.age=\"TEST\")  # Map a single column name as a string to a readable label readable_label(\"comorbid.previous_MI\") #> [1] \"Previous MI\"  # get mapping from original field names pre-normalisation to # post normalisation fields original_field_names(normData) #>                       consented                             ppc  #>               \"admin.consented\"            \"admin.pp_consented\"  #>                      withdrawal                   record_number  #>              \"admin.withdrawal\"           \"admin.record_number\"  #>                 ac_study_number                      nhs_number  #> \"admin.consented_record_number\"      \"admin.patient_identifier\"  #>                       duplicate                 enrollment_date  #>               \"admin.duplicate\"         \"admin.enrollment_date\"  #>                      study_year                            file  #>              \"admin.study_year\"               \"admin.data_file\"  #>                     week_number                     c19_variant  #>             \"admin.week_number\"               \"genomic.variant\"  #>                        hospital  #>                \"admin.hospital\" # unname(readable_label_mapping(normData))"},{"path":"/articles/avoncap.html","id":"augmenting-the-ve-extract-data","dir":"Articles","previous_headings":"","what":"Augmenting the VE extract data","title":"Getting started","text":"","code":"# devtools::load_all() augData = normData %>% avoncap::augment_data() #> Augmenting data using: augment.nhs_extract.deltave #> using cached item: ~/.cache/avoncap/augment-c0a6188e8e5ceeed5c7f302b593a85fd-b0be4b6b924799b0643f6ccebe7bfe19.rda"},{"path":"/articles/avoncap.html","id":"loading-and-normalising-the-central-database","dir":"Articles","previous_headings":"","what":"loading and normalising the central database","title":"Getting started","text":"","code":"rawData2 = avoncap::load_data(\"avoncap-export\",\"central\", merge=TRUE) #> using cached item: ~/.cache/avoncap/data-969416e3870a1ceaa091ca0c1e17ce42-992b0616f696b5e874a446c6e2dc6e5b.rda # without merge: currently: INCONSISTENT COLUMN(S) IN FILES: sars_cov2_antigen # due to the fact it is mostly a numeric but some values \">250\"  # devtools::load_all() normData2 = rawData2 %>% avoncap::normalise_data() #> Normalising data using: normalise.avoncap_export.central #> using cached item: ~/.cache/avoncap/data-969416e3870a1ceaa091ca0c1e17ce42-ff72608b64773903d114b82c59072820.rda #> Admission date is derived from study week and hence approximate. #> Some columns expected in the mappings were not present: nhs_number, covidvax_date, covidvax_dose_2, covidvax_dose_3, covidvax_dose_4, covidvax_dose_5, covidvax_dose_6, flu_date, ppv23_date, previousinfection_date #> using cached item: ~/.cache/avoncap/norm-0ef4812a2d1bc751062531c384a2b89e-8235b1ebaa9d52b2c05047c0edc09571.rda normMicro = rawData2 %>% normalise_data(instrument = \"micro\") #> Normalising data using: normalise.avoncap_export.central.micro #> using cached item: ~/.cache/avoncap/norm-bac5833d60cfe1af3d53143364ade99c-0754bc13643cf7c16405ee29679c8d4c.rda  normMicro %>% filter(micro.test_performed==\"yes\") %>% select(micro.pathogen) %>% unnest(micro.pathogen) %>% with(table(pathogen,detected,  useNA = \"always\")) #>                                   detected #> pathogen                              no   yes  <NA> #>   Aspergillus                      20773    17     0 #>   Streptococcus Agalactiae         20780    10     0 #>   Candida                          20261   529     0 #>   Achromobacter Xylosoxidans       20779    11     0 #>   Bacteroides                      20787     3     0 #>   Bacteroides fragilis             20784     6     0 #>   Bacteroides ovatus               20790     0     0 #>   Bacteroides uniformis            20790     0     0 #>   Burholderia cepacia              20787     3     0 #>   Citrobacter freundii complex     20767    23     0 #>   Citrobacter koseri               20756    34     0 #>   Clostridium perfringens          20782     8     0 #>   Eggerthella lenta                20790     0     0 #>   Enterobacter aerogenes           20785     5     0 #>   Enterobacter cloacae             20698    92     0 #>   Enterococcus faecalis            20735    55     0 #>   Enterococcus faecium             20762    28     0 #>   Escherichia coli                 20407   383     0 #>   Haemophilus influenzae           20599   191     0 #>   Haemophilus parainfluenzae       20788     2     0 #>   Klebsiella oxytoca               20735    55     0 #>   Klebsiella pneumoniae            20644   146     0 #>   Morganella morganii              20785     5     0 #>   Peptostreptococcus anaerobius    20790     0     0 #>   Proteus mirabilis                20744    46     0 #>   Pseudomonas aeruginosa           20481   309     0 #>   Serratia marcescens              20753    37     0 #>   Staphylcoccus aureus             20476   314     0 #>   Streptococcus anginosus          20784     6     0 #>   Streptococcus pneumoniae         20694    96     0 #>   Streptococcus salivarius group   20785     5     0 #>   Stenotrophomonas maltophilia     20744    46     0 #>   Acinetobacter                    20776    14     0 #>   Aspergillus niger                20790     0     0 #>   Bacillus                         20784     6     0 #>   Candida albicans                 20765    25     0 #>   Candida glabrata                 20784     6     0 #>   Candida tropicalis               20787     3     0 #>   Coagulase negative staphylcoccus 20781     9     0 #>   Corynebacterium                  20771    19     0 #>   Enterococcus                     20785     5     0 #>   Gram positive coccus             20787     3     0 #>   Klebsiella                       20769    21     0 #>   Legionella pneumoniae            20788     2     0 #>   MRSA                             20784     6     0 #>   MSSA                             20789     1     0 #>   Moraxella catarrhalis            20747    43     0 #>   Mycobacterium tuberculosis       20785     5     0 #>   Pneumocytis jirovecii            20788     2     0 #>   Pseudomonas                      20729    61     0 #>   Pseudomonas fluorescens          20789     1     0 #>   Staphylcoccus                    20771    19     0 #>   Staphylococcus capitis           20752    38     0 #>   Staphylococcus epidermidis       20566   224     0 #>   Staphylococcus hominis           20661   129     0 #>   Streptococcus                    20771    19     0 #>   Streptococcus beta-hemolytic     20736    54     0 #>   Streptococcus pyogenes           20782     8     0 #>   Streptococcus viridans           20790     0     0 #>   Yeast                            20758    32     0 #>   Other                            20315   475     0 #>   <NA>                                 0     0     0 normMicro %>% filter(micro.test_performed==\"yes\") %>% select(micro.test_type, micro.pathogen) %>% unnest(micro.pathogen) %>% filter(detected==\"yes\") %>% group_by(pathogen, micro.test_type) %>%   count() %>% arrange(desc(n)) #> # A tibble: 186 × 3 #> # Groups:   pathogen, micro.test_type [186] #>    pathogen                   micro.test_type      n #>    <fct>                      <fct>            <int> #>  1 Candida                    Sputum             318 #>  2 Escherichia coli           Blood culture      271 #>  3 Other                      Blood culture      252 #>  4 Staphylococcus epidermidis Blood culture      215 #>  5 Pseudomonas aeruginosa     Sputum             186 #>  6 Other                      Sputum             143 #>  7 Staphylcoccus aureus       Blood culture      139 #>  8 Haemophilus influenzae     Sputum             138 #>  9 Staphylococcus hominis     Blood culture      128 #> 10 Candida                    Respiratory swab   121 #> # ℹ 176 more rows normVirol = rawData2 %>% normalise_data(instrument = \"virol\") #> Normalising data using: normalise.avoncap_export.central.virol #> using cached item: ~/.cache/avoncap/norm-cfb2b3e08feee844479143a926465613-0754bc13643cf7c16405ee29679c8d4c.rda  normVirol  %>% filter(virol.test_performed==\"yes\") %>% select(virol.pathogen) %>% unnest(virol.pathogen) %>% with(table(pathogen,detected,  useNA = \"always\")) #>                                          detected #> pathogen                                     no   yes  <NA> #>   Influenza A                             55254   151     0 #>   Influenza B                             55404     1     0 #>   RSV                                     55350    55     0 #>   Adenovirus                              55397     8     0 #>   Human Metapneumovirus                   55353    52     0 #>   Human Rhinovirus/Enterovirus            55261   144     0 #>   Parainfluenza Type 1                    55402     3     0 #>   Parainfluenza Type 2                    55399     6     0 #>   Parainfluenza Type 3                    55371    34     0 #>   Parainfluenza Type 4                    55399     6     0 #>   Covid-19                                43385 12020     0 #>   Other                                   55391    14     0 #>   Coronavirus 229E                        55404     1     0 #>   Coronavirus HKU1                        55404     1     0 #>   Coronavirus NL63                        55405     0     0 #>   Coronavirus OC43                        55405     0     0 #>   Middle East Respiratory Syndrome (MERS) 55405     0     0 #>   Bordetella parapertussis (IS1001)       55403     2     0 #>   Bordetella pertussis (ptxP)             55405     0     0 #>   Chlamydia pneumoniae                    55403     2     0 #>   Mycoplasma pneumoniae                   55405     0     0 #>   <NA>                                        0     0     0 normVirol %>% filter(virol.test_performed==\"yes\") %>% select(virol.test_type, virol.pathogen) %>% unnest(virol.pathogen) %>% filter(detected==\"yes\") %>%    # with(table(pathogen, virol.test_type,  useNA = \"always\")) %>%    group_by(pathogen, virol.test_type) %>%   count() %>% arrange(desc(n)) #> # A tibble: 38 × 3 #> # Groups:   pathogen, virol.test_type [38] #>    pathogen                     virol.test_type               n #>    <fct>                        <fct>                     <int> #>  1 Covid-19                     PCR - COVID only           8485 #>  2 Covid-19                     POCT Test (Abbott)         2839 #>  3 Covid-19                     Lateral Flow - COVID only   516 #>  4 Covid-19                     Viral Culture               118 #>  5 Influenza A                  Lateral Flow - COVID only   111 #>  6 Human Rhinovirus/Enterovirus PCR - Respiratory panel     108 #>  7 Covid-19                     PCR - Respiratory panel      60 #>  8 Influenza A                  PCR - Respiratory panel      37 #>  9 Human Metapneumovirus        PCR - Respiratory panel      34 #> 10 RSV                          Lateral Flow - COVID only    30 #> # ℹ 28 more rows normRadio = rawData2 %>% normalise_data(instrument = \"radio\") #> Normalising data using: normalise.avoncap_export.central.radio #> using cached item: ~/.cache/avoncap/norm-54ff4a71f9ddec1dbf62dbffb5e8513b-0754bc13643cf7c16405ee29679c8d4c.rda  # old format tmp3  %>% filter(radio.test_performed==\"yes\") %>% with(table(radio.test_type, radio.lung_malignancy)) normRadio %>% filter(radio.test_performed==\"yes\") %>% select(radio.alrtd_finding) %>% unnest(radio.alrtd_finding) %>% with(table(finding,present,  useNA = \"always\")) #>                                   present #> finding                               no   yes  <NA> #>   Normal                           24871 17933     4 #>   Consistent with pneumonia        29455 13349     4 #>   Consistent with heart failure    39040  3764     4 #>   Consistent with pleural effusion 34631  8173     4 #>   Consistent with COVID-19         36778  6026     4 #>   Other abnormal finding           39828  2976     4 #>   <NA>                                 0     0     0 normRadio %>% filter(radio.test_performed==\"yes\") %>% select(radio.test_type, radio.non_alrtd_finding) %>% unnest(radio.non_alrtd_finding) %>% filter(present==\"yes\") %>% with(table(finding, radio.test_type,  useNA = \"always\")) #>                                        radio.test_type #> finding                                 CXR CT scan (CT thorax, CTPA, HRCT) #>   Pulmonary embolus                     146                             648 #>   Pneumothorax and/or pneumomediastinum 804                             149 #>   Cavity including abscesses             27                              23 #>   Aspergillioma                           1                               1 #>   Lung malignancy                       314                             272 #>   Lung nodules                          276                             337 #>   Tuberculosis (old or new)               8                               1 #>   Empyema                               108                              93 #>   <NA>                                    0                               0 #>                                        radio.test_type #> finding                                 US thorax MRI Other <NA> #>   Pulmonary embolus                             3   0    13    1 #>   Pneumothorax and/or pneumomediastinum         2   0     0    0 #>   Cavity including abscesses                    3   0     0    0 #>   Aspergillioma                                 0   0     0    0 #>   Lung malignancy                               0   0     2    0 #>   Lung nodules                                  2   0     1    0 #>   Tuberculosis (old or new)                     0   0     0    0 #>   Empyema                                       2   0     3    0 #>   <NA>                                          0   0     0    0 normHaem = rawData2 %>% normalise_data(instrument = \"haem\") #> Normalising data using: normalise.avoncap_export.central.haem #> using cached item: ~/.cache/avoncap/norm-0ef4812a2d1bc751062531c384a2b89e-9cb57dcd94c534f5744f4226eaeae412.rda  x = normHaem %>% summary() t(x) #>                                                                                 #>         admin.consented       Not approached  :13749   Yes             :10702   #>        admin.pp_consented     Not approached  :23465   Yes             :  986   #> admin.withdrawal              no  :13351               yes :    0               #> admin.record_number           Length:24457             Class :character         #> admin.consented_record_number Length:24457             Class :character         #> haem.blood_gas_ph             Min.   :   4.60          1st Qu.:   7.36          #>  haem.glucose                 Min.   :   0.20          1st Qu.:   5.70          #>  haem.albumin                 Min.   :  10.00          1st Qu.:  29.00          #> haem.white_cell_count         Min.   :  0.11           1st Qu.:  7.00           #> haem.haemoglobin              Min.   : 30.0            1st Qu.:116.0            #> haem.haemotocrit              Min.   :0.1000           1st Qu.:0.3570           #> haem.neutrophils              Min.   :  0.010          1st Qu.:  4.850          #> haem.lymphocytes              Min.   :  0.020          1st Qu.:  0.740          #>    haem.crp                   Min.   :  0.39           1st Qu.:  9.00           #>  haem.sodium                  Min.   :102.0            1st Qu.:134.0            #>   haem.urea                   Min.   :  0.500          1st Qu.:  4.400          #>   haem.egfr                   Min.   : 2.00            1st Qu.:52.00            #> haem.ferritin                 Min.   :    4.00         1st Qu.:   94.55         #>  haem.pro_bnp                 Min.   :    0.0          1st Qu.:  440.8          #>  haem.d_dimer                 Min.   :    0.00         1st Qu.:    0.58         #> haem.blood_group              Unknown:14232            O+     : 3807            #>  key.admit                    Length:24457             Class :character         #> key.consent                   Length:24457             Class :character         #> admin.consent_withheld        no :24457                yes:    0                #>                                                                                 #>         admin.consented       Declined consent:    0   NA's            :    6   #>        admin.pp_consented     Declined consent:    0   NA's            :    6   #> admin.withdrawal              NA's:11106                                        #> admin.record_number           Mode  :character                                  #> admin.consented_record_number Mode  :character                                  #> haem.blood_gas_ph             Median :   7.40          Mean   :  12.81          #>  haem.glucose                 Median :   6.70          Mean   :  12.39          #>  haem.albumin                 Median :  33.00          Mean   :  32.98          #> haem.white_cell_count         Median :  9.49           Mean   : 10.87           #> haem.haemoglobin              Median :131.0            Mean   :129.2            #> haem.haemotocrit              Median :0.3990           Mean   :0.3951           #> haem.neutrophils              Median :  7.080          Mean   :  8.362          #> haem.lymphocytes              Median :  1.140          Mean   :  1.508          #>    haem.crp                   Median : 33.00           Mean   : 66.63           #>  haem.sodium                  Median :137.0            Mean   :136.9            #>   haem.urea                   Median :  6.200          Mean   :  7.959          #>   haem.egfr                   Median :77.00            Mean   :68.53            #> haem.ferritin                 Median :  290.40         Mean   : 1528.77         #>  haem.pro_bnp                 Median : 1944.5          Mean   : 5043.4          #>  haem.d_dimer                 Median :    1.70         Mean   : 1033.45         #> haem.blood_group              A+     : 3621            B+     :  820            #>  key.admit                    Mode  :character                                  #> key.consent                   Mode  :character                                  #> admin.consent_withheld                                                          #>                                                                     #>         admin.consented                                             #>        admin.pp_consented                                           #> admin.withdrawal                                                    #> admin.record_number                                                 #> admin.consented_record_number                                       #> haem.blood_gas_ph             3rd Qu.:   7.43    Max.   :9999.00    #>  haem.glucose                 3rd Qu.:   8.40    Max.   :9999.00    #>  haem.albumin                 3rd Qu.:  36.00    Max.   :9999.00    #> haem.white_cell_count         3rd Qu.: 13.04     Max.   :394.99     #> haem.haemoglobin              3rd Qu.:144.0      Max.   :246.0      #> haem.haemotocrit              3rd Qu.:0.4360     Max.   :0.7120     #> haem.neutrophils              3rd Qu.: 10.440    Max.   :122.750    #> haem.lymphocytes              3rd Qu.:  1.710    Max.   :500.000    #>    haem.crp                   3rd Qu.: 93.00     Max.   :873.00     #>  haem.sodium                  3rd Qu.:140.0      Max.   :180.0      #>   haem.urea                   3rd Qu.:  9.300    Max.   :606.000    #>   haem.egfr                   3rd Qu.:90.00      Max.   :90.00      #> haem.ferritin                 3rd Qu.: 1003.50   Max.   :76878.00   #>  haem.pro_bnp                 3rd Qu.: 6242.0    Max.   :58184.0    #>  haem.d_dimer                 3rd Qu.:  552.00   Max.   :80000.00   #> haem.blood_group              A-     :  732      (Other): 1240      #>  key.admit                                                          #> key.consent                                                         #> admin.consent_withheld                                              #>                                               #>         admin.consented                       #>        admin.pp_consented                     #> admin.withdrawal                              #> admin.record_number                           #> admin.consented_record_number                 #> haem.blood_gas_ph             NA's   :6014    #>  haem.glucose                 NA's   :3956    #>  haem.albumin                 NA's   :822     #> haem.white_cell_count         NA's   :246     #> haem.haemoglobin              NA's   :245     #> haem.haemotocrit              NA's   :249     #> haem.neutrophils              NA's   :246     #> haem.lymphocytes              NA's   :246     #>    haem.crp                   NA's   :552     #>  haem.sodium                  NA's   :266     #>   haem.urea                   NA's   :321     #>   haem.egfr                   NA's   :290     #> haem.ferritin                 NA's   :23094   #>  haem.pro_bnp                 NA's   :20085   #>  haem.d_dimer                 NA's   :21026   #> haem.blood_group              NA's   :    5   #>  key.admit                                    #> key.consent                                   #> admin.consent_withheld"},{"path":"/articles/avoncap.html","id":"augmenting-the-central-database","dir":"Articles","previous_headings":"","what":"Augmenting the central database","title":"Getting started","text":"","code":"# devtools::load_all() augData2 = normData2 %>% avoncap::augment_data() #> Augmenting data using: augment.avoncap_export.central #> using cached item: ~/.cache/avoncap/augment-c0a6188e8e5ceeed5c7f302b593a85fd-b0c47226602a5f65b0afaeede5ffcc37.rda  augData2 %>% xglimpse(admission.category,  admission.presentation_3_class) #>                               admission.category #> admission.presentation_3_class Confirmed SARS-CoV-2 No evidence SARS-CoV-2 #>               Pneumonia                        4601                   7171 #>               NP-LRTI                          3480                   5011 #>               No evidence LRTI                   54                      0 #>               <NA>                                0                      0 #>                               admission.category #> admission.presentation_3_class Non-infective <NA> #>               Pneumonia                    0    0 #>               NP-LRTI                      0    0 #>               No evidence LRTI          4140    0 #>               <NA>                         0  804 augData2 %>% xglimpse(admission.covid_pcr_result,  admission.presentation_3_class) #>                               admission.covid_pcr_result #> admission.presentation_3_class SARS-CoV-2 PCR negative SARS-CoV-2 PCR positive #>               Pneumonia                           6803                    4554 #>               NP-LRTI                             4596                    3426 #>               No evidence LRTI                    3663                      39 #>               <NA>                                   0                       0 #>                               admission.covid_pcr_result #> admission.presentation_3_class <NA> #>               Pneumonia         415 #>               NP-LRTI           469 #>               No evidence LRTI  492 #>               <NA>              804 augData2 %>% xglimpse(admission.infective_cause,  admission.presentation_3_class) #>                               admission.infective_cause #> admission.presentation_3_class Non-infective Infective  <NA> #>               Pneumonia                    0     11772     0 #>               NP-LRTI                      0      8491     0 #>               No evidence LRTI          4140        54     0 #>               <NA>                         0         0   804 augData2 %>% xglimpse(admission.infective_cause,  admission.is_covid) #>                         admission.infective_cause #> admission.is_covid       Non-infective Infective  <NA> #>   Confirmed SARS-CoV-2               0      8135     0 #>   No evidence SARS-CoV-2          4140     12182     0 #>   <NA>                               0         0   804  augData2 %>% xglimpse(admin.consent_withheld, admission.presentation_3_class) #>                               admin.consent_withheld #> admission.presentation_3_class    no   yes #>               Pneumonia        11772     0 #>               NP-LRTI           8491     0 #>               No evidence LRTI  4194     0 #>               <NA>                 0   804"},{"path":"/articles/longitudinal-pneumo.html","id":"data-loading","dir":"Articles","previous_headings":"","what":"Data loading","title":"Pneumococcus longitudinal serotype data","text":"raw data expected urine-antigens subfolder","code":"rawPn = avoncap::load_data(\"nhs-extract\",\"pneumococcal\") #> using cached item: ~/.cache/avoncap/data-969416e3870a1ceaa091ca0c1e17ce42-4d09a3d57df30f773e8c4e8b3b567596.rda"},{"path":"/articles/longitudinal-pneumo.html","id":"data-normalisation","dir":"Articles","previous_headings":"","what":"Data normalisation","title":"Pneumococcus longitudinal serotype data","text":"","code":"normPn = rawPn %>% normalise_data() #> Normalising data using: normalise.nhs_extract.pneumococcal #> Some columns expected in the mappings were not present: hb #> using cached item: ~/.cache/avoncap/norm-0ef4812a2d1bc751062531c384a2b89e-0809d654745ba7e6a0120e8bafa86288.rda"},{"path":"/articles/longitudinal-pneumo.html","id":"augment-the-data","dir":"Articles","previous_headings":"","what":"Augment the data","title":"Pneumococcus longitudinal serotype data","text":"","code":"augPn = normPn %>% augment_data() #> Augmenting data using: augment.nhs_extract.pneumococcal #> caching item: ~/.cache/avoncap/augment-c0a6188e8e5ceeed5c7f302b593a85fd-593faf69f0dce77c9d8d56509565c6e6.rda #> Created comorbid.diabetes_type, comorbid.solid_cancer_present, comorbid.haemotological_cancer_present, comorbid.any_cancer_present using: comorbid.diabetes, comorbid.solid_cancer, comorbid.leukaemia, comorbid.lymphoma, comorbid.no_haemotological_cancer #> Created panel, label, type, pneumo.phe_pcv_group using: augPn %>% with(table(admission.infection_site, pneumo.test_type,useNA = \"always\")) #>                         pneumo.test_type #> admission.infection_site Blood culture only Binax only Blood culture and Binax #>         Lung                           6316       2017                    1458 #>         Meningitis                      443         46                      94 #>         Septic arthritis                129          5                      34 #>         ENT                              81          2                       0 #>         Myositis                          4          0                       0 #>         Otitis externa                    8          0                       0 #>         Abdominal                        16          1                       5 #>         Unclear/unknown                  19          0                       0 #>         Other                           136         13                       4 #>         <NA>                              0          0                       0 #>                         pneumo.test_type #> admission.infection_site CSF PCR Blood PCR <NA> #>         Lung                   0         0    0 #>         Meningitis             8         9    0 #>         Septic arthritis       0         0    0 #>         ENT                    0         0    0 #>         Myositis               0         0    0 #>         Otitis externa         0         0    0 #>         Abdominal              0         0    0 #>         Unclear/unknown        0         0    0 #>         Other                  0         2    0 #>         <NA>                   0         0    0"},{"path":"/articles/uad-data.html","id":"data-loading","dir":"Articles","previous_headings":"","what":"Data loading","title":"Pneumococcus urinary antigen data","text":"raw data expected urine-antigens subfolder data distributed single file cases controls together without distinguishing features. BinaxNOW serotype specific UAD tests results. tests run every person.","code":"fs::dir_tree(path = avoncap::input(\"urine-antigens\")) #> /home/vp22681/Data/avoncap/urine-antigens #> ├── 2022-09-15 #> │   └── uad-cases.csv #> ├── B1851202_SAP V1.0-27Sep2021_Final.pdf #> ├── README.md #> └── Table Template Serotype Distribution Scientific Affairs Proposal_FINAL.docx most_recent_files(\"urine-antigens\") #> # A tibble: 1 × 7 #>   filename  directory      path          date       hospital study_year filetype #>   <chr>     <chr>          <fs::path>    <date>     <chr>         <int> <chr>    #> 1 uad-cases urine-antigens …ad-cases.csv 2022-09-15 NA               NA csv rawUA = load_data(\"urine-antigens\") #> using cached item: ~/.cache/avoncap/data-969416e3870a1ceaa091ca0c1e17ce42-9c2e146f40e21e93dc39773001568d59.rda"},{"path":"/articles/uad-data.html","id":"data-normalisation","dir":"Articles","previous_headings":"","what":"Data normalisation","title":"Pneumococcus urinary antigen data","text":"data can subdivided serotype versus binax groups normalisation handles processing serotype format ^[0-9]+[-Z]$, aligning format patient identifier match [0-9]{4}-[0-9]+. processing test dates (supplied %e-%b-%y format). normalised UAD data individual serotype specific tests results nested column. single BinaxNOW result nested. Results keyed surveillance number (admission episode identifier) test data. UAD format: admin.consented_record_number: character pneumo.test_date: Date key.consent: character key.sample: character pneumo.urine_antigen: list BinaxNOW format: pneumo.binax_result: factor pneumo.test_date: Date admin.consented_record_number: character pneumo.urine_antigen_sample_id: character key.consent: character key.sample: character","code":"normUA = rawUA %>% normalise_data(instrument = \"serotype\", .nocache=TRUE) #> Normalising data using: normalise.urine_antigens.serotype #> caching item: ~/.cache/avoncap/norm-0ef4812a2d1bc751062531c384a2b89e-5100bb5656b566355d59ce58f383e4c0.rda #> mapping .RESULT to pneumo.urine_antigen_result #> mapping .EVENT_DATE to pneumo.test_date #> mapping .ANALYSIS to pneumo.urine_antigen_test #> mapping .SUBJECT to admin.consented_record_number #> mapping .BARCODE to pneumo.urine_antigen_sample_id #> Mapped 5 columns #> Did not map 9 columns normBinax = rawUA %>% normalise_data(instrument = \"binax\", .nocache=TRUE) #> Normalising data using: normalise.urine_antigens.binax #> caching item: ~/.cache/avoncap/norm-0ef4812a2d1bc751062531c384a2b89e-dbaafc2faf71424852c85cae1602eb20.rda #> mapping .RESULT to pneumo.binax_result #> mapping .EVENT_DATE to pneumo.test_date #> mapping .SUBJECT to admin.consented_record_number #> mapping .BARCODE to pneumo.urine_antigen_sample_id #> Mapped 4 columns #> Did not map 10 columns"},{"path":"/articles/uad-data.html","id":"data-augmentation","dir":"Articles","previous_headings":"","what":"Data augmentation","title":"Pneumococcus urinary antigen data","text":"UAD results commonly want know following: serotype testing complete serotypes? whole UAD panel positive serotype, many? UAD1 panel positive? UAD2? UAD positive PCV vaccine covered serotype? BINAX results real addition qeustions relevant","code":"augUA = normUA %>% augment_data() #> Augmenting data using: augment.urine_antigens.serotype #> using cached item: ~/.cache/avoncap/augment-c0a6188e8e5ceeed5c7f302b593a85fd-ba5f443abfb61760c28cad6c66b1a9ed.rda   augUA %>% filter(pneumo.serotype_results_complete) %>%    group_by(pneumo.serotype_summary_result) %>%    count() #> # A tibble: 3 × 2 #> # Groups:   pneumo.serotype_summary_result [3] #>   pneumo.serotype_summary_result     n #>   <fct>                          <int> #> 1 Negative                        1348 #> 2 Positive                          93 #> 3 Other                             20  augUA %>% unnest(pneumo.pcv_group) %>% with(table(group,result)) #>                                     result #> group                                Negative Positive Other Unknown #>   PCV7 (plus 9A,18A/B/F,23B)             1453       23     9     214 #>   PCV13 (plus 9A,18A/B/F,23B,6C)         1429       44    11     215 #>   PCV15 (plus 9A,18A/B/F,23B,6C)         1400       51    11     237 #>   PCV20 (plus 9A,18A/B/F,23B,6C,15C)     1356       86    19     238 #>   PPV23 (plus 9A,18A/B/F,23B,15C)        1352       89    20     238 #>   PCV10 (Serum Study Institute)          1442       31    11     215 #>   PCV10 (GSK)                            1442       31    11     215 #>   PCV15 (Zhifei)                         1406       44    12     237 #>   PCV24 (Vaxcyte)                        1348       93    20     238 #>   PCV24 (Affinivax)                      1348       93    20     238 #>   Additional PCV13 on 7 (plus 6C)        1452       21    11     215 #>   Additional PCV15 on 13                 1660       11     4      24 #>   Additional PCV20 on 15 (plus 15C)      1621       41    11      26 #>   Additional PPV23 on PCV20              1662        9     4      24 #>   4                                      1475        1     9     214 #>   6B                                     1476        0     9     214 #>   9V+A                                   1476        0     9     214 #>   14                                     1472        4     9     214 #>   18C+A/B/F                              1476        0     9     214 #>   19F                                    1473        3     9     214 #>   23F+B                                  1461       15     9     214 #>   1                                      1472        4     9     214 #>   3                                      1469        7     9     214 #>   5                                      1474        2     9     214 #>   6A+C                                   1471        5     9     214 #>   7F                                     1470        3    12     214 #>   19A                                    1473        3     9     214 #>   22F                                    1666        6     3      24 #>   33F                                    1667        5     3      24 #>   8                                      1632       34     9      24 #>   10A                                    1670        2     3      24 #>   11A                                    1670        4     1      24 #>   12F                                    1672        0     2      25 #>   15B+C                                  1669        2     3      25 #>   2                                      1674        0     1      24 #>   9N                                     1670        3     2      24 #>   17F                                    1667        4     4      24 #>   20                                     1672        2     1      24 #>   Other                                     0        0     0       0  ggplot(   augUA %>% unnest(pneumo.pcv_group) %>%      inner_join(avoncap::serotype_data$names, by=c(\"group\"=\"label\")) %>%     filter(indent==2, result == \"Positive\"), aes(x=group))+   geom_histogram(stat=\"count\") #> Warning in geom_histogram(stat = \"count\"): Ignoring unknown parameters: #> `binwidth`, `bins`, and `pad`"},{"path":"/articles/uad-data.html","id":"common-operations","dir":"Articles","previous_headings":"","what":"Common operations","title":"Pneumococcus urinary antigen data","text":"Find ","code":"# normUA %>% unnest(pneumo.urine_antigen) %>% group_by(result) %>% count() # ggplot(normUA %>% unnest(pneumo.urine_antigen) %>% filter(result == \"Positive\"), aes(x=test))+geom_histogram(stat=\"count\") # normBinax %>% group_by(pneumo.binax_result) %>% count() tmp = augUA %>% derive_pcv_groupings(pcv_map = avoncap::uad_pcv_map, col_name = pcv_custom) %>% glimpse() #> Rows: 1,699 #> Columns: 13 #> $ admin.consented_record_number    <chr> \"1001-00045\", \"1001-00057\", \"1001-000… #> $ pneumo.test_date                 <date> 2020-11-06, 2021-02-04, 2021-02-04, … #> $ key.consent                      <chr> \"1001-00045\", \"1001-00057\", \"1001-000… #> $ key.sample                       <chr> \"1001-00045-2020-11-06\", \"1001-00057-… #> $ pneumo.urine_antigen             <list> [<tbl_df[24 x 3]>], [<tbl_df[24 x 3]… #> $ pneumo.pcv_group                 <list> [<tbl_df[38 x 2]>], [<tbl_df[38 x 2]… #> $ pneumo.non_uad_panel_result      <fct> Unknown, Unknown, Unknown, Unknown, U… #> $ pneumo.uad1_panel_result         <fct> Negative, Negative, Negative, Negativ… #> $ pneumo.uad2_panel_result         <fct> Negative, Negative, Negative, Negativ… #> $ pneumo.serotype_summary_result   <fct> Negative, Negative, Negative, Negativ… #> $ pneumo.serotype_positive_count   <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ pneumo.serotype_results_complete <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, T… #> $ pcv_custom                       <list> [<tbl_df[38 x 2]>], [<tbl_df[38 x 2]… tmp %>% unnest(pcv_custom) %>% with(table(group,result)) #>                                     result #> group                                Negative Positive Other Unknown #>   PCV7 (plus 9A,18A/B/F,23B)             1453       23     9     214 #>   PCV13 (plus 9A,18A/B/F,23B,6C)         1429       44    11     215 #>   PCV15 (plus 9A,18A/B/F,23B,6C)         1400       51    11     237 #>   PCV20 (plus 9A,18A/B/F,23B,6C,15C)     1356       86    19     238 #>   PPV23 (plus 9A,18A/B/F,23B,15C)        1352       89    20     238 #>   PCV10 (Serum Study Institute)          1442       31    11     215 #>   PCV10 (GSK)                            1442       31    11     215 #>   PCV15 (Zhifei)                         1406       44    12     237 #>   PCV24 (Vaxcyte)                        1348       93    20     238 #>   PCV24 (Affinivax)                      1348       93    20     238 #>   Additional PCV13 on 7 (plus 6C)        1452       21    11     215 #>   Additional PCV15 on 13                 1660       11     4      24 #>   Additional PCV20 on 15 (plus 15C)      1621       41    11      26 #>   Additional PPV23 on PCV20              1662        9     4      24 #>   4                                      1475        1     9     214 #>   6B                                     1476        0     9     214 #>   9V+A                                   1476        0     9     214 #>   14                                     1472        4     9     214 #>   18C+A/B/F                              1476        0     9     214 #>   19F                                    1473        3     9     214 #>   23F+B                                  1461       15     9     214 #>   1                                      1472        4     9     214 #>   3                                      1469        7     9     214 #>   5                                      1474        2     9     214 #>   6A+C                                   1471        5     9     214 #>   7F                                     1470        3    12     214 #>   19A                                    1473        3     9     214 #>   22F                                    1666        6     3      24 #>   33F                                    1667        5     3      24 #>   8                                      1632       34     9      24 #>   10A                                    1670        2     3      24 #>   11A                                    1670        4     1      24 #>   12F                                    1672        0     2      25 #>   15B+C                                  1669        2     3      25 #>   2                                      1674        0     1      24 #>   9N                                     1670        3     2      24 #>   17F                                    1667        4     4      24 #>   20                                     1672        2     1      24 #>   Other                                     0        0     0       0"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rob Challen. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Challen R (2023). avoncap: AvonCap Study Analysis. R package version 0.0.0.9001.","code":"@Manual{,   title = {avoncap: AvonCap Study Analysis},   author = {Rob Challen},   year = {2023},   note = {R package version 0.0.0.9001}, }"},{"path":"/index.html","id":"avoncap","dir":"","previous_headings":"","what":"AvonCap Study Analysis","title":"AvonCap Study Analysis","text":"Functions manipulating analysing AvonCap study data. development status package, designed support AvonCap publications never submitted CRAN. continuous revision use stable releases recommended Installation can performed devtools:","code":"install.packages(\"devtools\") devtools::install_github(\"bristol-vaccine-centre/avoncap\")  # recommended to use a stable release version such as: devtools::install_github(\"bristol-vaccine-centre/avoncap@0.0.0.9000\")"},{"path":"/reference/all_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Scans the input directory and returns csv or xlsx files in that directory — all_files","title":"Scans the input directory and returns csv or xlsx files in that directory — all_files","text":"Extracting metadata filename present - particularly hospital, year number","code":""},{"path":"/reference/all_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scans the input directory and returns csv or xlsx files in that directory — all_files","text":"","code":"all_files()"},{"path":"/reference/all_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scans the input directory and returns csv or xlsx files in that directory — all_files","text":"dataframe containing filename, path, date, hospital, study_year fields","code":""},{"path":"/reference/augment_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanitise AvonCap data columns — augment_data","title":"Sanitise AvonCap data columns — augment_data","text":"AvonCap data lots columns named difficult remember fashion, composed data items enumerated values semantics. makes displaying difficult filtering done raw data inscrutable. Depending source data different columns may present due differences NHS UoB data sets. redcap database options may checklists radio buttons, end mysterious names data.","code":""},{"path":"/reference/augment_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanitise AvonCap data columns — augment_data","text":"","code":"augment_data(x, ...)"},{"path":"/reference/augment_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanitise AvonCap data columns — augment_data","text":"x raw data load_data() ... Arguments passed augment_generic df data frame","code":""},{"path":"/reference/augment_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sanitise AvonCap data columns — augment_data","text":"tracked dataframe ","code":""},{"path":"/reference/augment_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sanitise AvonCap data columns — augment_data","text":"function maps data tidy dataframe consistently named columns, named factors appropriate. present data ethnicity files sanitisation code held zzz-avoncap-mappings.R file.","code":""},{"path":"/reference/augment_generic.html","id":null,"dir":"Reference","previous_headings":"","what":"Applies a set of functions to the whole dataframe — augment_generic","title":"Applies a set of functions to the whole dataframe — augment_generic","text":"sequences, catches errors allows parameters passed name","code":""},{"path":"/reference/augment_generic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Applies a set of functions to the whole dataframe — augment_generic","text":"","code":"augment_generic(df, ...)"},{"path":"/reference/augment_generic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Applies a set of functions to the whole dataframe — augment_generic","text":"df data frame ... unnamed parameters list functions, named parameters passed functions (match formal arguments).","code":""},{"path":"/reference/augment_generic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Applies a set of functions to the whole dataframe — augment_generic","text":"altered df","code":""},{"path":"/reference/augment_generic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Applies a set of functions to the whole dataframe — augment_generic","text":"","code":"fn1 = function(df,v) {df %>% dplyr::filter(cut==\"Fair\") %>% dplyr::mutate(x_col = color)} fn2 = function(df,v) {df %>% dplyr::filter(color==v$color$J)} df = diamonds %>% augment_generic(fn1, fn2) #> Error in rlang::list2(...): object 'diamonds' not found"},{"path":"/reference/default_column_names.html","id":null,"dir":"Reference","previous_headings":"","what":"default column naming mappings — default_column_names","title":"default column naming mappings — default_column_names","text":"default column naming mappings","code":""},{"path":"/reference/default_column_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"default column naming mappings — default_column_names","text":"","code":"default_column_names(...)"},{"path":"/reference/default_column_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"default column naming mappings — default_column_names","text":"... additional named items add","code":""},{"path":"/reference/default_column_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"default column naming mappings — default_column_names","text":"set mappings","code":""},{"path":"/reference/derive_WHO_outcome_score.html","id":null,"dir":"Reference","previous_headings":"","what":"determine WHO outcome score — derive_WHO_outcome_score","title":"determine WHO outcome score — derive_WHO_outcome_score","text":"Scores 0-3 community cases.","code":""},{"path":"/reference/derive_WHO_outcome_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"determine WHO outcome score — derive_WHO_outcome_score","text":"","code":"derive_WHO_outcome_score(df, v, ...)"},{"path":"/reference/derive_WHO_outcome_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"determine WHO outcome score — derive_WHO_outcome_score","text":"df dataframe. v value set. usually precomputed augment framework value set can explicitly supplied v = get_value_sets(df) ... ignored","code":""},{"path":"/reference/derive_WHO_outcome_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"determine WHO outcome score — derive_WHO_outcome_score","text":"dataframe","code":""},{"path":"/reference/derive_WHO_outcome_score.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"determine WHO outcome score — derive_WHO_outcome_score","text":"generally cant tell difference 7 8. 4: Hospitalised; oxygen therapy 5: Hospitalised; oxygen mask nasal prongs 6: Hospitalised; oxygen NIV high flow 7: Intubation mechanical ventilation, pO2/FiO2 ≥150 SpO2/FiO2 ≥200 8: Mechanical ventilation pO2/FIO2 <150 (SpO2/FiO2 <200) vasopressors 9: Mechanical ventilation pO2/FiO2 <150 vasopressors, dialysis, ECMO 10: Dead","code":""},{"path":"/reference/derive_aLRTD_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"The aLRTD incidence paper classifications — derive_aLRTD_categories","title":"The aLRTD incidence paper classifications — derive_aLRTD_categories","text":"3 category classifications","code":""},{"path":"/reference/derive_aLRTD_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The aLRTD incidence paper classifications — derive_aLRTD_categories","text":"","code":"derive_aLRTD_categories(df, v, ...)"},{"path":"/reference/derive_aLRTD_categories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The aLRTD incidence paper classifications — derive_aLRTD_categories","text":"df dataframe. v value set. usually precomputed augment framework value set can explicitly supplied v = get_value_sets(df) ... ignored","code":""},{"path":"/reference/derive_aLRTD_categories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The aLRTD incidence paper classifications — derive_aLRTD_categories","text":"dataframe","code":""},{"path":"/reference/derive_aLRTD_categories.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The aLRTD incidence paper classifications — derive_aLRTD_categories","text":"aetiological: Confirmed SARS-CoV-2 - implies Infective evidence SARS-CoV-2 - implies Infective confirmed SARS-CoV-2 Non-infective - presumed non infective clinical presentation: Pneumonia - implies Infective NP-LRTI - implies Infective signs LRTI (include CRDE HF) cases get clinical presentation . Typically people infective cause, LRTI pneumonia excluded. URTI incidental COVID cases.","code":""},{"path":"/reference/derive_admission_episode.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a counter in the event of repeated admissions — derive_admission_episode","title":"Create a counter in the event of repeated admissions — derive_admission_episode","text":"also calculate time interval admissions. also repeat admission instrument use.","code":""},{"path":"/reference/derive_admission_episode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a counter in the event of repeated admissions — derive_admission_episode","text":"","code":"derive_admission_episode(df, v)"},{"path":"/reference/derive_admission_episode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a counter in the event of repeated admissions — derive_admission_episode","text":"df dataframe. v value set. usually precomputed augment framework value set can explicitly supplied v = get_value_sets(df)","code":""},{"path":"/reference/derive_admission_episode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a counter in the event of repeated admissions — derive_admission_episode","text":"dataframe","code":""},{"path":"/reference/derive_completed_vaccination_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Derive detailed vaccination status on admission — derive_completed_vaccination_status","title":"Derive detailed vaccination status on admission — derive_completed_vaccination_status","text":"Vaccination deemed effect given > 14 days admission 1st dose >7 days admission subsequent doses. account previous infection data set.","code":""},{"path":"/reference/derive_completed_vaccination_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derive detailed vaccination status on admission — derive_completed_vaccination_status","text":"","code":"derive_completed_vaccination_status(df, v, ...)"},{"path":"/reference/derive_completed_vaccination_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derive detailed vaccination status on admission — derive_completed_vaccination_status","text":"df dataframe. v value set. usually precomputed augment framework value set can explicitly supplied v = get_value_sets(df) ... ignored","code":""},{"path":"/reference/derive_completed_vaccination_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derive detailed vaccination status on admission — derive_completed_vaccination_status","text":"dataframe","code":""},{"path":"/reference/derive_consent_flag.html","id":null,"dir":"Reference","previous_headings":"","what":"Has a patient withheld consent or withdrawn — derive_consent_flag","title":"Has a patient withheld consent or withdrawn — derive_consent_flag","text":"patient withdrawn consent may still data fields populated","code":""},{"path":"/reference/derive_consent_flag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Has a patient withheld consent or withdrawn — derive_consent_flag","text":"","code":"derive_consent_flag(df, v)"},{"path":"/reference/derive_consent_flag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Has a patient withheld consent or withdrawn — derive_consent_flag","text":"df dataframe. v value set. usually precomputed augment framework value set can explicitly supplied v = get_value_sets(df)","code":""},{"path":"/reference/derive_consent_flag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Has a patient withheld consent or withdrawn — derive_consent_flag","text":"dataframe","code":""},{"path":"/reference/derive_continuous_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"Categorical scores for continuous variables — derive_continuous_categories","title":"Categorical scores for continuous variables — derive_continuous_categories","text":"Typically used regression models non-linear effects splines","code":""},{"path":"/reference/derive_continuous_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Categorical scores for continuous variables — derive_continuous_categories","text":"","code":"derive_continuous_categories(df, v, ...)"},{"path":"/reference/derive_continuous_categories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Categorical scores for continuous variables — derive_continuous_categories","text":"df dataframe. v value set. usually precomputed augment framework value set can explicitly supplied v = get_value_sets(df) ... ignored","code":""},{"path":"/reference/derive_continuous_categories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Categorical scores for continuous variables — derive_continuous_categories","text":"dataframe","code":""},{"path":"/reference/derive_continuous_categories.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Categorical scores for continuous variables — derive_continuous_categories","text":"Age category - UK demographic data ends 85, 65 key cut 5 year bands, 10 year bands age categories end 85 (N.b.) principled reason . Boundaries fall approx 0.1, 0.2, 0.4, 0.6, 0.8 quantiles. merge first two groups outcomes usually different. Covid vaccination cohorts 5 year age groups, vaccination prioirty 65+ Age pneumovax eligibility CCI - 4 bands defined https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3891119/#:~:text=Based%20on%20the%20CCI%20score,%20CCI%20scores%20%E2%89%A55.similar https://link.springer.com/article/10.1007/s10654-021-00802-z Rockwood score - independent versus dependent frailty","code":""},{"path":"/reference/derive_covid_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if an admission is proven SARS-CoV-2 PCR positive — derive_covid_status","title":"Determine if an admission is proven SARS-CoV-2 PCR positive — derive_covid_status","text":"SARS-CoV-2 PCR positive lab confirmed diagnosis.","code":""},{"path":"/reference/derive_covid_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if an admission is proven SARS-CoV-2 PCR positive — derive_covid_status","text":"","code":"derive_covid_status(df, v, ...)"},{"path":"/reference/derive_covid_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if an admission is proven SARS-CoV-2 PCR positive — derive_covid_status","text":"df dataframe. v value set. usually precomputed augment framework value set can explicitly supplied v = get_value_sets(df) ... ignored","code":""},{"path":"/reference/derive_covid_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine if an admission is proven SARS-CoV-2 PCR positive — derive_covid_status","text":"dataframe","code":""},{"path":"/reference/derive_covid_status.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determine if an admission is proven SARS-CoV-2 PCR positive — derive_covid_status","text":"admission.covid_pcr_result: based fields: c19_adm_swab covid_19_diagnosis Patient reported, clinical diagnoses assumed PCR negative (although possible cases may done). Lateral flows done hospital counted PCR negative. negative admission swabs counted negative NA signifies test done. admission.is_covid: Binary confirmed -evidence. PCR results count confirmed, LFT results count confirmed, anything else evidence (includes negatives test done)","code":""},{"path":"/reference/derive_diagnosis_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"Create 4 non exclusive diagnostic categories — derive_diagnosis_categories","title":"Create 4 non exclusive diagnostic categories — derive_diagnosis_categories","text":"Pneumonia one : Standard care diagnosis CAP (radiologically clinically) Empyema abscess Admission chest X-ray shows pneumonia","code":""},{"path":"/reference/derive_diagnosis_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create 4 non exclusive diagnostic categories — derive_diagnosis_categories","text":"","code":"derive_diagnosis_categories(df, v)"},{"path":"/reference/derive_diagnosis_categories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create 4 non exclusive diagnostic categories — derive_diagnosis_categories","text":"df dataframe. v value set. usually precomputed augment framework value set can explicitly supplied v = get_value_sets(df)","code":""},{"path":"/reference/derive_diagnosis_categories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create 4 non exclusive diagnostic categories — derive_diagnosis_categories","text":"dataframe","code":""},{"path":"/reference/derive_diagnosis_categories.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create 4 non exclusive diagnostic categories — derive_diagnosis_categories","text":"NP-LRTI : pneumonia Standard care LTRI diagnosis Exascerbation CRDE: Standard care exacerbation COPD Standard care exacerbation Non-COPD (N.B. may pneumonia NP-LRTI) Heart failure: Standard care congestive heart failure.","code":""},{"path":"/reference/derive_effective_vaccination_status.html","id":null,"dir":"Reference","previous_headings":"","what":"A simple vaccination status on admission as an ordered number of doses — derive_effective_vaccination_status","title":"A simple vaccination status on admission as an ordered number of doses — derive_effective_vaccination_status","text":"account previous infection data set.","code":""},{"path":"/reference/derive_effective_vaccination_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A simple vaccination status on admission as an ordered number of doses — derive_effective_vaccination_status","text":"","code":"derive_effective_vaccination_status(df, v, ...)"},{"path":"/reference/derive_effective_vaccination_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A simple vaccination status on admission as an ordered number of doses — derive_effective_vaccination_status","text":"df dataframe. v value set. usually precomputed augment framework value set can explicitly supplied v = get_value_sets(df) ... ignored","code":""},{"path":"/reference/derive_effective_vaccination_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A simple vaccination status on admission as an ordered number of doses — derive_effective_vaccination_status","text":"dataframe","code":""},{"path":"/reference/derive_genomic_variant.html","id":null,"dir":"Reference","previous_headings":"","what":"Give a inferred Alpha, Delta or Omicron status based on time alone. — derive_genomic_variant","title":"Give a inferred Alpha, Delta or Omicron status based on time alone. — derive_genomic_variant","text":"relies date period confidence variants circulating given type. quite conservative estimates based frequency sequenced cases bristol area (according Sanger centre cases identified hospital testing)","code":""},{"path":"/reference/derive_genomic_variant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Give a inferred Alpha, Delta or Omicron status based on time alone. — derive_genomic_variant","text":"","code":"derive_genomic_variant(df, v, ...)"},{"path":"/reference/derive_genomic_variant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Give a inferred Alpha, Delta or Omicron status based on time alone. — derive_genomic_variant","text":"df dataframe. v value set. usually precomputed augment framework value set can explicitly supplied v = get_value_sets(df) ... ignored","code":""},{"path":"/reference/derive_genomic_variant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Give a inferred Alpha, Delta or Omicron status based on time alone. — derive_genomic_variant","text":"dataframe","code":""},{"path":"/reference/derive_genomic_variant.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Give a inferred Alpha, Delta or Omicron status based on time alone. — derive_genomic_variant","text":"Sanger centre data Pre-alpha 05 Dec 2020 Alpha 13 Feb 2021 15 May 2021 Delta 01 Jun 2021 07 Nov 2021 Omicron 07 Feb 2022 present","code":""},{"path":"/reference/derive_hospital_burden_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary outcomes for hospital burden — derive_hospital_burden_outcomes","title":"Binary outcomes for hospital burden — derive_hospital_burden_outcomes","text":"outcomes tested Delta vs Omicron severity paper sensitivity analysis. defined COVID cases.","code":""},{"path":"/reference/derive_hospital_burden_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary outcomes for hospital burden — derive_hospital_burden_outcomes","text":"","code":"derive_hospital_burden_outcomes(df, v, ...)"},{"path":"/reference/derive_hospital_burden_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binary outcomes for hospital burden — derive_hospital_burden_outcomes","text":"df dataframe. v value set. usually precomputed augment framework value set can explicitly supplied v = get_value_sets(df) ... ignored","code":""},{"path":"/reference/derive_hospital_burden_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Binary outcomes for hospital burden — derive_hospital_burden_outcomes","text":"dataframe","code":""},{"path":"/reference/derive_hospital_burden_outcomes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Binary outcomes for hospital burden — derive_hospital_burden_outcomes","text":"O2 requirement within 7 days (various cut-offs) respiratory support 7 days (various cut-offs) LOS > X days first 7 days (various cut-offs)","code":""},{"path":"/reference/derive_infective_classification.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if an admission is due to an infective cause — derive_infective_classification","title":"Determine if an admission is due to an infective cause — derive_infective_classification","text":"Infective admissions defined : pneumonias NP-LRTI laboratory confirmed COVID diagnosis admission swab covid positive","code":""},{"path":"/reference/derive_infective_classification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if an admission is due to an infective cause — derive_infective_classification","text":"","code":"derive_infective_classification(df, v)"},{"path":"/reference/derive_infective_classification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if an admission is due to an infective cause — derive_infective_classification","text":"df dataframe. v value set. usually precomputed augment framework value set can explicitly supplied v = get_value_sets(df)","code":""},{"path":"/reference/derive_infective_classification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine if an admission is due to an infective cause — derive_infective_classification","text":"dataframe","code":""},{"path":"/reference/derive_infective_classification.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determine if an admission is due to an infective cause — derive_infective_classification","text":"Infective admissions excluded : Standard care non-infectious process SOC non-LRTI (none categoories ) unknowns defined non-Infective","code":""},{"path":"/reference/derive_nosocomial_covid_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Did the patient catch COVID in hospital — derive_nosocomial_covid_status","title":"Did the patient catch COVID in hospital — derive_nosocomial_covid_status","text":"relevant SARS-CoV-2 PCR positive patient. Timing positive test compared admission: relies knowing dates hence works identifiable data sets,","code":""},{"path":"/reference/derive_nosocomial_covid_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Did the patient catch COVID in hospital — derive_nosocomial_covid_status","text":"","code":"derive_nosocomial_covid_status(df, v, ...)"},{"path":"/reference/derive_nosocomial_covid_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Did the patient catch COVID in hospital — derive_nosocomial_covid_status","text":"df dataframe. v value set. usually precomputed augment framework value set can explicitly supplied v = get_value_sets(df) ... ignored","code":""},{"path":"/reference/derive_nosocomial_covid_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Did the patient catch COVID in hospital — derive_nosocomial_covid_status","text":"dataframe","code":""},{"path":"/reference/derive_nosocomial_covid_status.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Did the patient catch COVID in hospital — derive_nosocomial_covid_status","text":"Logic : Community PCR result predates admission Probably commuinity PCR result within 7 days admission Probably nosocomial 7-28 days admission Otherwise undefined.","code":""},{"path":"/reference/derive_patient_identifier.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a unique patient level id if it does not already exist — derive_patient_identifier","title":"Create a unique patient level id if it does not already exist — derive_patient_identifier","text":"Derived record number first record number (ensuring matches) entry recrod number.","code":""},{"path":"/reference/derive_patient_identifier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a unique patient level id if it does not already exist — derive_patient_identifier","text":"","code":"derive_patient_identifier(df, v)"},{"path":"/reference/derive_patient_identifier.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a unique patient level id if it does not already exist — derive_patient_identifier","text":"df dataframe. v value set. usually precomputed augment framework value set can explicitly supplied v = get_value_sets(df)","code":""},{"path":"/reference/derive_patient_identifier.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a unique patient level id if it does not already exist — derive_patient_identifier","text":"dataframe","code":""},{"path":"/reference/derive_pcv_groupings.html","id":null,"dir":"Reference","previous_headings":"","what":"Group pneumo serotypes according to e.g. vaccine coverage — derive_pcv_groupings","title":"Group pneumo serotypes according to e.g. vaccine coverage — derive_pcv_groupings","text":"range useful serotype groups defined list uad_groups. default_pcv_map gives set mappings group headings gives overall serotype distribution vaccine.","code":""},{"path":"/reference/derive_pcv_groupings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group pneumo serotypes according to e.g. vaccine coverage — derive_pcv_groupings","text":"","code":"derive_pcv_groupings(   df,   ...,   pcv_map = uad_pcv_map,   not_matched = \"Other\",   col_name = \"pneumo.pcv_group\" )"},{"path":"/reference/derive_pcv_groupings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group pneumo serotypes according to e.g. vaccine coverage — derive_pcv_groupings","text":"df normalised urine antigen data ... ignored pcv_map 2 column data frame mapping group uad_analysis not_matched call column non-matched serotypes? Default , Non vaccine type might preferred. col_name target column name pcv grouping (defaults pneumo.pcv_group)","code":""},{"path":"/reference/derive_pcv_groupings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group pneumo serotypes according to e.g. vaccine coverage — derive_pcv_groupings","text":"augmented data frame additional column defined col_name","code":""},{"path":"/reference/derive_pcv_groupings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Group pneumo serotypes according to e.g. vaccine coverage — derive_pcv_groupings","text":"logic employed combining elements : (result == \"Unknown\") ~ \"Unknown\" (result == \"Positive\") ~ \"Positive\" (result == \"Negative\") ~ \"Negative\" TRUE ~ \"\"","code":""},{"path":"/reference/derive_phe_pcv_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Get vaccine coverage group for known serotype — derive_phe_pcv_group","title":"Get vaccine coverage group for known serotype — derive_phe_pcv_group","text":"longitudinal oneumocococcal data, range useful serotype groups defined list uad_groups. default_pcv_map gives set mappings group headings gives overall serotype distribution vaccine.","code":""},{"path":"/reference/derive_phe_pcv_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get vaccine coverage group for known serotype — derive_phe_pcv_group","text":"","code":"derive_phe_pcv_group(   df,   ...,   pcv_map = serotype_pcv_map,   not_matched = \"Other\",   col_name = \"pneumo.phe_pcv_group\" )"},{"path":"/reference/derive_phe_pcv_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get vaccine coverage group for known serotype — derive_phe_pcv_group","text":"df normalised longitudinal pneumococcal data ... ignored pcv_map 2 column data frame mapping group serotype not_matched call column non-matched serotypes? Default , Non vaccine type might preferred. col_name target column name pcv grouping (defaults pneumo.phe_pcv_group)","code":""},{"path":"/reference/derive_phe_pcv_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get vaccine coverage group for known serotype — derive_phe_pcv_group","text":"augmented data frame additional column defined col_name","code":""},{"path":"/reference/derive_pneumo_uad_panel.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate UAD panel for test — derive_pneumo_uad_panel","title":"Calculate UAD panel for test — derive_pneumo_uad_panel","text":"panels UAD1 PCV13 serotypes, UAD2 PPV23 serotypes.","code":""},{"path":"/reference/derive_pneumo_uad_panel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate UAD panel for test — derive_pneumo_uad_panel","text":"","code":"derive_pneumo_uad_panel(df, ...)"},{"path":"/reference/derive_pneumo_uad_panel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate UAD panel for test — derive_pneumo_uad_panel","text":"df pneumo serotype dataframe ... ignored","code":""},{"path":"/reference/derive_pneumo_uad_panel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate UAD panel for test — derive_pneumo_uad_panel","text":"dataframe additional columns pneumo.uad1_panel_result, pneumo.uad2_panel_result, pneumo.non_uad_panel_result, pneumo.serotype_summary_result","code":""},{"path":"/reference/derive_pneumo_uad_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate summary status from UAD (or other serotype) panel results — derive_pneumo_uad_status","title":"Calculate summary status from UAD (or other serotype) panel results — derive_pneumo_uad_status","text":"logic defined derive_pcv_groupings().","code":""},{"path":"/reference/derive_pneumo_uad_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate summary status from UAD (or other serotype) panel results — derive_pneumo_uad_status","text":"","code":"derive_pneumo_uad_status(df, ...)"},{"path":"/reference/derive_pneumo_uad_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate summary status from UAD (or other serotype) panel results — derive_pneumo_uad_status","text":"df pneumo serotype dataframe ... ignored","code":""},{"path":"/reference/derive_pneumo_uad_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate summary status from UAD (or other serotype) panel results — derive_pneumo_uad_status","text":"dataframe additional columns pneumo.uad1_panel_result, pneumo.uad2_panel_result, pneumo.non_uad_panel_result, pneumo.serotype_summary_result","code":""},{"path":"/reference/derive_pneumococcal_high_risk.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if patient is in a high pneumococcal risk group — derive_pneumococcal_high_risk","title":"Determine if patient is in a high pneumococcal risk group — derive_pneumococcal_high_risk","text":"High pneumococcal risk defined following: 65 years old pneumococcal risks comorbid copd interstitial lung disease cystic fibrosis hypertension CCF ischaemic heart disease chronic kidney disease chronic liver disease diabetes asthmatic immunodeficiency immunosupression","code":""},{"path":"/reference/derive_pneumococcal_high_risk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if patient is in a high pneumococcal risk group — derive_pneumococcal_high_risk","text":"","code":"derive_pneumococcal_high_risk(df, v, ...)"},{"path":"/reference/derive_pneumococcal_high_risk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if patient is in a high pneumococcal risk group — derive_pneumococcal_high_risk","text":"df dataframe. v value set. usually precomputed augment framework value set can explicitly supplied v = get_value_sets(df) ... ignored","code":""},{"path":"/reference/derive_pneumococcal_high_risk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine if patient is in a high pneumococcal risk group — derive_pneumococcal_high_risk","text":"dataframe","code":""},{"path":"/reference/derive_pneumococcal_risk_category.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine pneumococcal risk group — derive_pneumococcal_risk_category","title":"Determine pneumococcal risk group — derive_pneumococcal_risk_category","text":"Original algorithm B1851202 SAP defines 3 class risk group","code":""},{"path":"/reference/derive_pneumococcal_risk_category.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine pneumococcal risk group — derive_pneumococcal_risk_category","text":"","code":"derive_pneumococcal_risk_category(df, v, ...)"},{"path":"/reference/derive_pneumococcal_risk_category.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine pneumococcal risk group — derive_pneumococcal_risk_category","text":"df dataframe. v value set. usually precomputed augment framework value set can explicitly supplied v = get_value_sets(df) ... ignored","code":""},{"path":"/reference/derive_pneumococcal_risk_category.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine pneumococcal risk group — derive_pneumococcal_risk_category","text":"dataframe","code":""},{"path":"/reference/derive_pneumococcal_risk_category.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Determine pneumococcal risk group — derive_pneumococcal_risk_category","text":"High-risk (immunocompromised) ✗ Asplenia ✓ Cancer/Malignancy, Hematologic ✓ Cancer/Malignancy, Solid Tumor ✓ Chronic Kidney Disease ✓ Human Immunodeficiency Virus (HIV) – AIDS ✓ Human Immunodeficiency Virus (HIV) – AIDS ✓ Immunodeficiency ✓ Immunosuppressant Drug Therapy ✓ Organ Transplantation ✗ Multiple Myeloma Risk (immunocompetent) ✓ Asthma ✓ Alcoholism ✗ Celiac Disease ✓ Chronic Liver Disease without Hepatic Failure ✓ Chronic Liver Disease Hepatic Failure ✓ Chronic Obstructive Pulmonary Disease ✗ Cochlear Implant ✓ Congestive Heart Failure ✓ Coronary Artery Disease (CAD) ✓ Chronic Neurologic Diseases ✗ Coagulation factor replacement therapy ✗ CSF Leak ✓ Diabetes Treated Medication ✓ syndrome ✓ Institutionalized nursing home LTC facility (Nursing home long-term care facility disability dependency subject characteristics/risk determinants eCRF page) ✓ Occupational risk exposure metal fumes ✓ Chronic Heart Disease ✓ Chronic Lung Disease ✓ pneumococcal disease risk factors ✗ Previous Invasive Pneumococcal Disease ✓ Tobacco smoking (Tobacco/E-Cigarettes) Anything else low risk","code":""},{"path":"/reference/derive_qcovid.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a QCOVID2 score from AvonCap data source — derive_qcovid","title":"Calculate a QCOVID2 score from AvonCap data source — derive_qcovid","text":"uses inbuilt imd_to_townsend map. implements cut version QCovid2 score depending data available.","code":""},{"path":"/reference/derive_qcovid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a QCOVID2 score from AvonCap data source — derive_qcovid","text":"","code":"derive_qcovid(df, v = avoncap_df %>% get_value_sets())"},{"path":"/reference/derive_qcovid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a QCOVID2 score from AvonCap data source — derive_qcovid","text":"avoncap_df normalised augmented avoncap data source","code":""},{"path":"/reference/derive_qcovid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a QCOVID2 score from AvonCap data source — derive_qcovid","text":"dataframe additional columns, qcovid2.log_hazard, covid2.hazard_ratio: log hazard rate QCOVID2 score missing data substituted reference value QCOVID2 population. qcovid2.log_comorbid_hazard, qcovid2.comorbid_hazard_ratio: log hazard rate comorbid conditions including age BMI.","code":""},{"path":"/reference/derive_severe_disease_outcomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Binary outcomes for severe disease — derive_severe_disease_outcomes","title":"Binary outcomes for severe disease — derive_severe_disease_outcomes","text":"Confirmed death (length follow ) ICU admission","code":""},{"path":"/reference/derive_severe_disease_outcomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binary outcomes for severe disease — derive_severe_disease_outcomes","text":"","code":"derive_severe_disease_outcomes(df, v, ...)"},{"path":"/reference/derive_severe_disease_outcomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binary outcomes for severe disease — derive_severe_disease_outcomes","text":"df dataframe. v value set. usually precomputed augment framework value set can explicitly supplied v = get_value_sets(df) ... ignored","code":""},{"path":"/reference/derive_severe_disease_outcomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Binary outcomes for severe disease — derive_severe_disease_outcomes","text":"dataframe","code":""},{"path":"/reference/derive_severe_disease_outcomes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Binary outcomes for severe disease — derive_severe_disease_outcomes","text":"described aLRTD paper","code":""},{"path":"/reference/derive_simpler_comorbidities.html","id":null,"dir":"Reference","previous_headings":"","what":"Rationalise some of the more detailed comorbidities — derive_simpler_comorbidities","title":"Rationalise some of the more detailed comorbidities — derive_simpler_comorbidities","text":"Rationalise detailed comorbidities","code":""},{"path":"/reference/derive_simpler_comorbidities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rationalise some of the more detailed comorbidities — derive_simpler_comorbidities","text":"","code":"derive_simpler_comorbidities(df, v, ...)"},{"path":"/reference/derive_simpler_comorbidities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rationalise some of the more detailed comorbidities — derive_simpler_comorbidities","text":"df dataframe. v value set. usually precomputed augment framework value set can explicitly supplied v = get_value_sets(df) ... ignored","code":""},{"path":"/reference/derive_simpler_comorbidities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rationalise some of the more detailed comorbidities — derive_simpler_comorbidities","text":"dataframe","code":""},{"path":"/reference/derive_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Derived data function template — derive_template","title":"Derived data function template — derive_template","text":"Derived data function template","code":""},{"path":"/reference/derive_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derived data function template — derive_template","text":"","code":"derive_template(df, v, ...)"},{"path":"/reference/derive_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derived data function template — derive_template","text":"df dataframe. v value set. usually precomputed augment framework value set can explicitly supplied v = get_value_sets(df) ... ignored","code":""},{"path":"/reference/derive_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derived data function template — derive_template","text":"dataframe","code":""},{"path":"/reference/derive_vaccination_timings.html","id":null,"dir":"Reference","previous_headings":"","what":"Derive times from vaccination to symptom onset — derive_vaccination_timings","title":"Derive times from vaccination to symptom onset — derive_vaccination_timings","text":"symptom duration given assumed zero.","code":""},{"path":"/reference/derive_vaccination_timings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derive times from vaccination to symptom onset — derive_vaccination_timings","text":"","code":"derive_vaccination_timings(df, v, ...)"},{"path":"/reference/derive_vaccination_timings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derive times from vaccination to symptom onset — derive_vaccination_timings","text":"df dataframe. v value set. usually precomputed augment framework value set can explicitly supplied v = get_value_sets(df) ... ignored","code":""},{"path":"/reference/derive_vaccination_timings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derive times from vaccination to symptom onset — derive_vaccination_timings","text":"dataframe","code":""},{"path":"/reference/derive_vaccine_combinations.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated - Vaccine combinations are less relevant now — derive_vaccine_combinations","title":"Deprecated - Vaccine combinations are less relevant now — derive_vaccine_combinations","text":"many potential combinations 4th, 5th sixth dose make useful.","code":""},{"path":"/reference/derive_vaccine_combinations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated - Vaccine combinations are less relevant now — derive_vaccine_combinations","text":"","code":"derive_vaccine_combinations(df, v, ..)"},{"path":"/reference/derive_vaccine_combinations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated - Vaccine combinations are less relevant now — derive_vaccine_combinations","text":"df dataframe. v value set. usually precomputed augment framework value set can explicitly supplied v = get_value_sets(df)","code":""},{"path":"/reference/derive_vaccine_combinations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated - Vaccine combinations are less relevant now — derive_vaccine_combinations","text":"dataframe","code":""},{"path":"/reference/dot-cache_clear.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear data from the passthrough cache for complex or long running operations — .cache_clear","title":"Clear data from the passthrough cache for complex or long running operations — .cache_clear","text":"Clear data passthrough cache complex long running operations","code":""},{"path":"/reference/dot-cache_clear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear data from the passthrough cache for complex or long running operations — .cache_clear","text":"","code":".cache_clear(   .cache = getOption(\"cache.dir\", rappdirs::user_cache_dir(utils::packageName())),   .prefix = \".*\",   interactive = TRUE )"},{"path":"/reference/dot-cache_clear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clear data from the passthrough cache for complex or long running operations — .cache_clear","text":".cache location cache directory. May get value options(\"ggrrr.cache.dir\") default value rappdirs::user_cache_dir(\"ggrrr\") .prefix regular expression matching prefix cached item, selective clean operations. defaults everything. interactive suppress sure? warning FALSE value (defaults TRUE)","code":""},{"path":"/reference/dot-cache_clear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear data from the passthrough cache for complex or long running operations — .cache_clear","text":"nothing. called side effects","code":""},{"path":"/reference/dot-cache_delete_stale.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete stale files in a cache — .cache_delete_stale","title":"Delete stale files in a cache — .cache_delete_stale","text":"Staleness determined number days 2am current day current time-zone. item cached one day becomes stale 2am day cached. time configurable option(cache.time_day_starts = 0) midnight. Automated analysis using caches updated data ensure analysis cross time point otherwise may end using old data.","code":""},{"path":"/reference/dot-cache_delete_stale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete stale files in a cache — .cache_delete_stale","text":"","code":".cache_delete_stale(   .cache = getOption(\"cache.dir\", rappdirs::user_cache_dir(utils::packageName())),   .prefix = \".*\",   .stale = Inf )"},{"path":"/reference/dot-cache_delete_stale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete stale files in a cache — .cache_delete_stale","text":".cache location cache directory. May get value options(\"cache.dir\") default value rappdirs::user_cache_dir(\"ggrrr\") .prefix name operation can namespace cached files selective clean operations .stale length time days keep cached data considering stale.","code":""},{"path":"/reference/dot-cache_delete_stale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete stale files in a cache — .cache_delete_stale","text":"nothing. called side effects.","code":""},{"path":"/reference/dot-cache_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a file into a local cache. — .cache_download","title":"Download a file into a local cache. — .cache_download","text":"function copies remote file local cache makes sure reused.","code":""},{"path":"/reference/dot-cache_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a file into a local cache. — .cache_download","text":"","code":".cache_download(   url,   ...,   .nocache = getOption(\"cache.disable\", default = FALSE),   .cache = getOption(\"cache.download\", rappdirs::user_cache_dir(utils::packageName())),   .stale = Inf,   .extn = NULL )"},{"path":"/reference/dot-cache_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a file into a local cache. — .cache_download","text":"url url download ... ignored .nocache set TRUE caching disabled .cache location downloaded files .stale long leave file replacing . .extn file name extension","code":""},{"path":"/reference/dot-cache_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a file into a local cache. — .cache_download","text":"path downloaded file","code":""},{"path":"/reference/dot-cached.html","id":null,"dir":"Reference","previous_headings":"","what":"A simple pass-through cache for complex or long running operations — .cached","title":"A simple pass-through cache for complex or long running operations — .cached","text":"executes expr saves output RDS file indexed code expr hash input variables (contain variable inputs)","code":""},{"path":"/reference/dot-cached.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A simple pass-through cache for complex or long running operations — .cached","text":"","code":".cached(   .expr,   ...,   .nocache = getOption(\"cache.disable\", default = FALSE),   .cache = getOption(\"cache.dir\", rappdirs::user_cache_dir(utils::packageName())),   .prefix = \"cached\",   .stale = Inf )"},{"path":"/reference/dot-cached.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A simple pass-through cache for complex or long running operations — .cached","text":".expr code output requires caching. return value create side effects change global variables. ... inputs code expr depends changes require code re-running, Sys.Date() .nocache option defeat caching can set globally options(\"cache.disable\"=TRUE) .cache location cache directory. May get value options(\"cache.dir\") default value rappdirs::user_cache_dir(\"ggrrr\") .prefix name operation can namespace cached files selective clean operations .stale length time days keep cached data considering stale. can also set options(\"cache.stale\")","code":""},{"path":"/reference/dot-cached.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A simple pass-through cache for complex or long running operations — .cached","text":"output .expr usually value","code":""},{"path":"/reference/extract_dependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the — extract_dependencies","title":"Extract the — extract_dependencies","text":"Extract ","code":""},{"path":"/reference/extract_dependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the — extract_dependencies","text":"","code":"extract_dependencies(data, col, original = TRUE)"},{"path":"/reference/extract_dependencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the — extract_dependencies","text":"data dataframe col column symbol original map names original column names data. false function returns list current normalised column names.","code":""},{"path":"/reference/extract_dependencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the — extract_dependencies","text":"named list dependencies original column names given column","code":""},{"path":"/reference/get_value_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a value set list of a dataframe — get_value_sets","title":"Get a value set list of a dataframe — get_value_sets","text":"function examines dataframe returns list columns sub-lists options factors. provides programmatic access (automcomplete) values available dataframe, throws early error try access data variable exist.","code":""},{"path":"/reference/get_value_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a value set list of a dataframe — get_value_sets","text":"","code":"get_value_sets(df)"},{"path":"/reference/get_value_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a value set list of a dataframe — get_value_sets","text":"df dataframe examine","code":""},{"path":"/reference/get_value_sets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a value set list of a dataframe — get_value_sets","text":"list lists column name factor levels list, checked list.","code":""},{"path":"/reference/imd_to_townsend.html","id":null,"dir":"Reference","previous_headings":"","what":"High level IMD to Townsend score map — imd_to_townsend","title":"High level IMD to Townsend score map — imd_to_townsend","text":"high level mapping IMD Townsend score inaccurate townsend score","code":""},{"path":"/reference/imd_to_townsend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"High level IMD to Townsend score map — imd_to_townsend","text":"","code":"imd_to_townsend"},{"path":[]},{"path":"/reference/imd_to_townsend.html","id":"imd-to-townsend","dir":"Reference","previous_headings":"","what":"imd_to_townsend","title":"High level IMD to Townsend score map — imd_to_townsend","text":"data frame 10 rows 2 columns: imd_decile IMD mean_townsend average townsend score IMD","code":""},{"path":"/reference/imd_to_townsend.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"High level IMD to Townsend score map — imd_to_townsend","text":"https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/845345/File_7_-_All_IoD2019_Scores__Ranks__Deciles_and_Population_Denominators_3.csv https://s3-eu-west-1.amazonaws.com/statistics.digitalresources.jisc.ac.uk/dkan/files/Townsend_Deprivation_Scores/Scores/Scores-%202011%20UK%20LSOA.csv","code":""},{"path":"/reference/input.html","id":null,"dir":"Reference","previous_headings":"","what":"Locate the input directory — input","title":"Locate the input directory — input","text":"Locate input directory","code":""},{"path":"/reference/input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locate the input directory — input","text":"","code":"input(...)"},{"path":"/reference/input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Locate the input directory — input","text":"... sub path(s) within input directory","code":""},{"path":"/reference/input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Locate the input directory — input","text":"path input directory sub path(s) provided","code":""},{"path":"/reference/input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Locate the input directory — input","text":"","code":"# devtools::load_all()  avoncap::set_input(\"~/Data/avoncap\") #> Found data directory: /home/vp22681/Data/avoncap #> /home/vp22681/Data/avoncap avoncap::input(\"nhs-extract\") #> /home/vp22681/Data/avoncap/nhs-extract  avoncap::all_files() #> # A tibble: 57 × 7 #>    filename     directory     path       date       hospital study_year filetype #>    <chr>        <chr>         <fs::path> <date>     <chr>         <int> <chr>    #>  1 central_y1   avoncap-expo… …al_y1.csv 2022-03-22 NA                1 csv      #>  2 central_y2   avoncap-expo… …al_y2.csv 2022-03-22 NA                2 csv      #>  3 central_y1   avoncap-expo… …al_y1.csv 2022-06-20 NA                1 csv      #>  4 central_y2   avoncap-expo… …al_y2.csv 2022-06-20 NA                2 csv      #>  5 central_y1   avoncap-expo… …al_y1.csv 2022-07-11 NA                1 csv      #>  6 central_y2   avoncap-expo… …al_y2.csv 2022-07-11 NA                2 csv      #>  7 central_y1   avoncap-expo… …al_y1.csv 2022-09-21 NA                1 csv      #>  8 central_y2   avoncap-expo… …al_y2.csv 2022-09-21 NA                2 csv      #>  9 uad-controls avoncap-expo… …trols.csv 2022-10-07 NA               NA csv      #> 10 central_y1   avoncap-expo… …al_y1.csv 2022-11-09 NA                1 csv      #> # ℹ 47 more rows   # exact match on filename column of all_data() avoncap::most_recent_files(\"AvonCAPLRTDCentralDa\") #> # A tibble: 0 × 7 #> # ℹ 7 variables: filename <chr>, directory <chr>, path <fs::path>, date <date>, #> #   hospital <chr>, study_year <int>, filetype <chr>   # or matches by lower case startWith on directory avoncap::most_recent_files(\"nhs-extract\",\"deltave\") #> # A tibble: 6 × 7 #>   filename       directory   path        date       hospital study_year filetype #>   <chr>          <chr>       <fs::path>  <date>     <chr>         <int> <chr>    #> 1 deltave_BRI_y1 nhs-extract …BRI_y1.csv 2022-12-07 BRI               1 csv      #> 2 deltave_BRI_y2 nhs-extract …BRI_y2.csv 2022-12-07 BRI               2 csv      #> 3 deltave_BRI_y3 nhs-extract …BRI_y3.csv 2022-12-07 BRI               3 csv      #> 4 deltave_NBT_y1 nhs-extract …NBT_y1.csv 2022-12-07 NBT               1 csv      #> 5 deltave_NBT_y2 nhs-extract …NBT_y2.csv 2022-12-07 NBT               2 csv      #> 6 deltave_NBT_y3 nhs-extract …NBT_y3.csv 2022-12-07 NBT               3 csv        avoncap::most_recent_files(\"metadata\") #> # A tibble: 5 × 7 #>   filename     directory path            date       hospital study_year filetype #>   <chr>        <chr>     <fs::path>      <date>     <chr>         <int> <chr>    #> 1 central_y1   metadata  …central_y1.csv 2022-10-24 NA                1 csv      #> 2 central_y2   metadata  …central_y2.csv 2022-10-24 NA                2 csv      #> 3 central_y3   metadata  …central_y3.csv 2022-10-24 NA                3 csv      #> 4 uad-controls metadata  …d-controls.csv 2022-10-24 NA               NA csv      #> 5 pneumococcal metadata  …eumococcal.csv 2022-11-29 NA               NA csv       avoncap::valid_inputs() #> # A tibble: 21 × 3 #> # Groups:   type [6] #>    type           subtype      file         #>    <chr>          <chr>        <chr>        #>  1 avoncap-export central      central_y1   #>  2 avoncap-export central      central_y2   #>  3 avoncap-export uad-controls uad-controls #>  4 avoncap-export central      central_y3   #>  5 ethnicity      NA           y1           #>  6 ethnicity      NA           y2           #>  7 metadata       central      central_y1   #>  8 metadata       central      central_y2   #>  9 metadata       central      central_y3   #> 10 metadata       uad-controls uad-controls #> # ℹ 11 more rows"},{"path":"/reference/load_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load data and check structure — load_data","title":"Load data and check structure — load_data","text":"Loads AvonCap data set csv files, may optionally qualified site ('BRI' 'NBT') database year ('y1', 'y2', 'y3') part file name. selects recent files earlier reproduce_at date detects whether set files.","code":""},{"path":"/reference/load_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load data and check structure — load_data","text":"","code":"load_data(   type,   subtype = NULL,   reproduce_at = as.Date(getOption(\"reproduce.at\", default = Sys.Date())),   merge = NA,   ... )"},{"path":"/reference/load_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load data and check structure — load_data","text":"type file category see valid_inputs() current list input directory reproduce_at date cut newer data files merge setting TRUE forces multiple files merged single data frame losing mismatching columns. ... passed cached may specifically want use `nocache=TRUE`` file (optional circumstances) file name component see valid_inputs() current list input directory","code":""},{"path":"/reference/load_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load data and check structure — load_data","text":"either list dataframes single merged dataframe","code":""},{"path":"/reference/load_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load data and check structure — load_data","text":"files loaded csv checked files () columns, (B) type (empty) (C) major parse issues. merges files single dataframe, possible, otherwise return individually loaded files list dataframes.","code":""},{"path":"/reference/load_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load data and check structure — load_data","text":"","code":"load_data(\"nhs-extract\",\"deltave\") #> using cached item: ~/.cache/avoncap/data-969416e3870a1ceaa091ca0c1e17ce42-2455e2e169f1b657eeece521d9a79582.rda #> # A tibble: 18,009 × 238 #>    record_number nhs_number admission_date gender age_at_admission   imd #>  * <chr>              <dbl> <chr>           <dbl>            <dbl> <dbl> #>  1 B02976        6124792060 17/05/2021          2             83.4     3 #>  2 B02977        4867644056 17/05/2021          2             32.5     2 #>  3 B02978        4722751269 17/05/2021          2             77.4     3 #>  4 B02980        6103077427 17/05/2021          1             90.6     3 #>  5 B02984        4780809983 17/05/2021          2             60.2     1 #>  6 B02993        4584988390 17/05/2021          2             65.6     8 #>  7 B02994        4866191937 17/05/2021          1             64.1     2 #>  8 B03018        4722881049 18/05/2021          1             74.7     4 #>  9 B03020        6283943446 18/05/2021          2             65.4     4 #> 10 B03024        4725779881 18/05/2021          2             75.7     9 #> # ℹ 17,999 more rows #> # ℹ 232 more variables: rockwood <dbl>, symptom_days_preadmit <dbl>, #> #   fever2 <dbl>, pleurtic_cp <dbl>, cough2 <dbl>, sput_prod <dbl>, #> #   dyspnoea <dbl>, tachypnoea2 <dbl>, anosmia <dbl>, ageusia <dbl>, #> #   dysgeusia <dbl>, fever <dbl>, hypothermia <dbl>, chills <dbl>, #> #   headache <dbl>, malaise <dbl>, wheeze <dbl>, myalgia <dbl>, #> #   worse_confusion <dbl>, general_det <dbl>, hr <dbl>, systolic_bp <dbl>, …"},{"path":"/reference/map_avoncap_central.html","id":null,"dir":"Reference","previous_headings":"","what":"Core avoncap normalisation — map_avoncap_central","title":"Core avoncap normalisation — map_avoncap_central","text":"record_number -> admin.record_number (name) what_was_the_first_surveil -> admin.first_record_number (name) ac_study_number -> admin.consented_record_number (study_id) nhs_number -> admin.patient_identifier (ppi) duplicate -> admin.duplicate (yesno) enrollment_date -> admin.enrollment_date (date) study_year -> admin.study_year (name) file -> admin.data_file (name) week_number -> admin.week_number (name) c19_diagnosis -> diagnosis.standard_of_care_COVID_diagnosis (list) clinical_radio_diagnosis -> diagnosis.clinical_or_radiological_LRTI_or_pneumonia (yesno) c19_adm_swab -> diagnosis.admission_swab (list) c19_test_type -> diagnosis.test_type (list) qualifying_symptoms_signs -> diagnosis.qualifying_symptoms_signs (name) cc_critieria -> diagnosis.meets_case_control_criteria (yesno) cc_pos_date -> diagnosis.first_COVID_positive_swab_date (date) gender -> demog.gender (list) age_at_admission -> demog.age (double) age_march -> demog.age_in_march_2021 (double) imd -> demog.imd_decile (name) smoking -> demog.smoker (list) ethnicity2 -> demog.ethnicity (list) care_home -> demog.care_home_resident (yesno) drugs -> dplyr (checkboxes) vaping -> demog.vaping (list) alc_units -> demog.units_of_alcohol (name) contraindication -> vaccination.covid_vaccine_contraindicated (yesno) covid19_vax -> vaccination.covid_vaccination (list) covidvax_date -> vaccination.first_dose_date (date) covidvax_dose_2 -> vaccination.second_dose_date (date) covidvax_dose_3 -> vaccination.third_dose_date (date) covidvax_dose_4 -> vaccination.fourth_dose_date (date) covidvax_dose_5 -> vaccination.fifth_dose_date (date) covidvax_dose_6 -> vaccination.sixth_dose_date (date) brand_of_covid19_vaccinati -> vaccination.first_dose_brand (list) covid19vax_brand_2 -> vaccination.second_dose_brand (list) covid19vax_brand_3 -> vaccination.third_dose_brand (list) covid19vax_brand_4 -> vaccination.fourth_dose_brand (list) covid19vax_brand_5 -> vaccination.fifth_dose_brand (list) covid19vax_brand_6 -> vaccination.sixth_dose_brand (list) c19vaxd1_adm -> admission.time_since_first_vaccine_dose (name) c19vaxd2_adm -> admission.time_since_second_vaccine_dose (name) c19vaxd3_adm -> admission.time_since_third_vaccine_dose (name) c19vaxd4_adm -> admission.time_since_fourth_vaccine_dose (name) c19vax5_adm -> admission.time_since_fifth_vaccine_dose (name) c19vax6_adm -> admission.time_since_sixth_vaccine_dose (name) flu_date -> vaccination.last_flu_dose_date (date) fluvax_adm_d1 -> admission.time_since_last_flu_vaccine_dose (name) ppv23_date -> vaccination.last_pneumococcal_dose_date (date) ppv23vax_adm_d -> admission.time_since_last_pneumococcal_vaccine_dose (name) c19_variant -> genomic.variant (variant) year -> admission.year (double) study_week -> admission.study_week (double) admission_date -> admission.date (date) hospital -> admin.hospital (text_to_factor) ics -> admission.on_inhaled_corticosteroids (yesno) immsup -> admission.on_immunosuppression (yesno) psi_class -> admission.pneumonia_severity_index_class (list) crb_test_mai -> admission.curb_65_severity_score (list) news_2_total -> admission.news2_score (name) pulse_ox -> admission.oximetry (name) rr -> admission.respiratory_rate (name) fio2 -> admission.max_oxygen (name) systolic_bp -> admission.systolic_bp (name) diastolic_bp -> admission.diastolic_bp (name) hr -> admission.heart_rate (name) temperature -> admission.temperature (list) symptom_days_preadmit -> admission.duration_symptoms (name) previous_infection -> admission.previous_covid_infection (list) previousinfection_date -> admission.previous_covid_infection_date (date) c19d_preadm -> admission.time_since_covid_diagnosis (name) rockwood -> admission.rockwood_score (name) cci_total_score -> admission.charlson_comorbidity_index (name) height -> admission.height (name) weight -> admission.weight (name) bmi -> admission.BMI (double) first_radio -> dplyr (checkboxes) c19_peep -> day_7.max_peep (name) c19_hospadm -> day_7.length_of_stay (list) c17_high -> day_7.max_care_level (list) c19icuon -> day_7.still_on_icu (yesno) c19_icudays -> day_7.icu_length_of_stay (list) c19_vent -> day_7.max_ventilation_level (list) c19_ox -> day_7.max_o2_level (list) c19_ionotropes -> day_7.ionotropes_needed (yesno) c19_complication -> dplyr (checkboxes) c19_death7d -> day_7.death (yesno) c19_meds -> dplyr (checkboxes) hospital_length_of_stay -> outcome.length_of_stay (name) survival_days -> outcome.survival_duration (name) ip_death -> outcome.inpatient_death (yesno) days_in_icu -> outcome.icu_duration (name) did_the_patient_have_respi -> outcome.respiratory_support_needed (yesno) number_of_days_of_ventilat -> outcome.ventilator_duration (name) ett_days -> outcome.endotracheal_tube_duration (name) renal_replacement_therapy -> outcome.renal_support_duration (name) complications -> dplyr (checkboxes) ventilatory_support -> outcome.highest_level_ventilatory_support (list) did_the_patient_receive_ec -> outcome.received_ecmo (yesno) inotropic_support_required -> outcome.received_ionotropes (yesno) lrtd_30d_outcome -> outcome.functional_status (list) fever2 -> symptom.abnormal_temperature (yesno_unknown) pleurtic_cp -> symptom.pleuritic_chest_pain (yesno_unknown) cough2 -> symptom.cough (yesno_unknown) sput_prod -> symptom.productive_sputum (yesno_unknown) dyspnoea -> symptom.dyspnoea (yesno_unknown) tachypnoea2 -> symptom.tachypnoea (yesno_unknown) anosmia -> symptom.anosmia (yesno_unknown) ageusia -> symptom.ageusia (yesno_unknown) dysgeusia -> symptom.dysguesia (yesno_unknown) fever -> symptom.fever (yesno_unknown) hypothermia -> symptom.hypothermia (yesno_unknown) chills -> symptom.chills (yesno_unknown) headache -> symptom.headache (yesno_unknown) malaise -> symptom.malaise (yesno_unknown) wheeze -> symptom.wheeze (yesno_unknown) myalgia -> symptom.myalgia (yesno_unknown) worse_confusion -> symptom.worsening_confusion (yesno_unknown) general_det -> symptom.general_deterioration (yesno_unknown) ox_on_admission -> symptom.oxygen_required_on_admission (yesno_unknown) resp_disease -> dplyr (checkboxes) other_respiratory_disease -> dplyr (checkboxes) chd -> dplyr (checkboxes) mi -> comorbid.previous_mi (yesno) other_chd -> dplyr (checkboxes) diabetes -> comorbid.diabetes (list) dm_meds -> comorbid.diabetes_medications (list) neurological_disease -> dplyr (checkboxes) dementia -> dplyr (checkboxes) cancer -> comorbid.solid_cancer (list) haem_malig -> dplyr (checkboxes) ckd -> comorbid.ckd (list) liver_disease -> comorbid.liver_disease (list) gastric_ulcers -> comorbid.gastric_ulcers (yesno) pvd -> comorbid.periph_vasc_dx (yesno) ctd -> comorbid.connective_tissue_dx (yesno) immunodeficiency -> comorbid.immunodeficiency (yesno) other_pn_disease -> comorbid.other_pneumococcal_risks (yesno) transplant -> comorbid.transplant_recipient (yesno) pregnancy -> comorbid.pregnancy (list) hiv -> dplyr (checkboxes) final_soc_lrtd_diagnosis -> renameToVars (checkboxes) covid_19_diagnosis -> diagnosis.covid_19_diagnosis (list) ppv23 -> vaccination.pneumovax (list) flu_vaccine -> vaccination.influenza_vaccination (list)","code":""},{"path":"/reference/map_avoncap_central.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Core avoncap normalisation — map_avoncap_central","text":"","code":"map_avoncap_central()"},{"path":"/reference/map_avoncap_central.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Core avoncap normalisation — map_avoncap_central","text":"list","code":""},{"path":"/reference/map_avoncap_haem.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalise the avoncap data haematology data — map_avoncap_haem","title":"Normalise the avoncap data haematology data — map_avoncap_haem","text":"record_number -> admin.record_number (name) ac_study_number -> admin.consented_record_number (study_id) ph_7_35 -> haem.blood_gas_ph (double) glucose -> haem.glucose (double) albumin -> haem.albumin (double) wcc -> haem.white_cell_count (double) hb -> haem.haemoglobin (double) haematocrit -> haem.haemotocrit (double) pmn -> haem.neutrophils (double) lymphocytes -> haem.lymphocytes (double) crp -> haem.crp (double) na_result -> haem.sodium (double) ur_result -> haem.urea (double) egfr -> haem.egfr (double) ferritin -> haem.ferritin (double) nt_probnp -> haem.pro_bnp (double) d_dimer -> haem.d_dimer (double) patient_blood_group -> haem.blood_group (list)","code":""},{"path":"/reference/map_avoncap_haem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalise the avoncap data haematology data — map_avoncap_haem","text":"","code":"map_avoncap_haem()"},{"path":"/reference/map_avoncap_haem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalise the avoncap data haematology data — map_avoncap_haem","text":"list","code":""},{"path":"/reference/map_avoncap_micro.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalise the avoncap data microbiology data — map_avoncap_micro","title":"Normalise the avoncap data microbiology data — map_avoncap_micro","text":"microtest_done -> micro.test_performed (yesno) microtest_date -> micro.test_date (date) microday -> micro.test_days_from_admission (name) micro_test -> micro.test_type (list) micro_isolates -> micro.pathogen_detected (yesno_unknown) isolate_identified -> micro.pathogen (checkboxes_to_nested_list) pn_result -> micro.pneumo_serotype_status (list) pn_st -> micro.pneumo_serotype (pneumo_serotype) micro_lab -> micro.sent_to_central_lab (yesno_unknown) pen_susceptibility -> micro.penicillin_susceptibility (checkboxes_to_list) septrin_susceptibility -> micro.septrin_susceptibility (checkboxes_to_list) doxy_susceptibility -> micro.doxycycline_susceptibility (checkboxes_to_list) levoflox_suscept -> micro.levofloxacin_susceptibility (checkboxes_to_list) cef_susceptibility -> micro.ceftriaxone_susceptibility (checkboxes_to_list) pn_uat_result -> micro.pneumo_binax_now (list) lg_uat_result -> micro.pneumo_legionella_uat (list) micro_final_report -> micro.is_final_report (yesno) record_number -> admin.record_number (name) ac_study_number -> admin.consented_record_number (study_id)","code":""},{"path":"/reference/map_avoncap_micro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalise the avoncap data microbiology data — map_avoncap_micro","text":"","code":"map_avoncap_micro(instrument)"},{"path":"/reference/map_avoncap_micro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalise the avoncap data microbiology data — map_avoncap_micro","text":"list","code":""},{"path":"/reference/map_avoncap_pneumococcal.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalise the avoncap pneumococcal data — map_avoncap_pneumococcal","title":"Normalise the avoncap pneumococcal data — map_avoncap_pneumococcal","text":"participant_number -> admin.record_number (name) hospital -> admin.hospital (list) nhs_number -> admin.patient_identifier (ppi) age_at_admission -> demog.age (double) sex -> demog.gender (list) test_date -> pneumo.test_date (date) test -> pneumo.test_type (list) serotype -> pneumo.phe_serotype (pneumo_serotype) smoker -> demog.smoker (list) resp_disease -> dplyr (checkboxes) chd -> dplyr (checkboxes) mi -> comorbid.previous_mi (yesno) ckd -> comorbid.ckd (list) liver_disease -> comorbid.liver_disease (list) diabetes -> comorbid.diabetes (list) dm_meds -> comorbid.diabetes_medications (list) dementia -> dplyr (checkboxes) neurological_disease -> dplyr (checkboxes) gastric_ulcers -> comorbid.gastric_ulcers (yesno) dysphagia -> comorbid.dysphagia (yesno) pvd -> comorbid.periph_vasc_dx (yesno) ctd -> comorbid.connective_tissue_dx (yesno) immunodeficiency -> comorbid.immunodeficiency (yesno) other_pn_disease -> comorbid.other_pneumococcal_risks (yesno) hiv -> dplyr (checkboxes) cancer -> comorbid.solid_cancer (list) haem_malig -> dplyr (checkboxes) recent_chemo -> comorbid.recent_chemotherapy (yesno) recent_radiotherapy -> comorbid.recent_radiotherapy (yesno) transplant -> comorbid.transplant_recipient (yesno) pregnancy -> comorbid.pregnancy (list) drugs -> dplyr (checkboxes) immsup -> admission.on_immunosuppression (yesno) weight_problem -> comorbid.bmi_status (list) concomittant_flu -> comorbid.influenza_infection (yesno) hcv -> comorbid.hepatitis_c (yesno) ppv23 -> vaccination.ppv23_vaccination (list) flu_vaccine -> vaccination.flu (list) cci_total_score -> admission.charlson_comorbidity_index (name) los_days -> outcome.length_of_stay (double) amts -> admission.triage_score (list) resp_rate -> admission.respiratory_rate (double) sats_ra -> admission.saturations_on_room_air (double) systolic_bp -> admission.systolic_bp (double) diastolic_bp -> admission.diastolic_bp (double) crb65_score -> admission.crb65 (double) curb65_score -> admission.curb65 (double) antibiotic_route -> outcome.antibiotic_route (list) antibiotic_days -> outcome.antibiotic_duration (double) infection_site -> admission.infection_site (list) deranged_lfts -> outcome.abnormal_lft (yesno) aki -> outcome.acute_kidney_injury (yesno) pleural_effusion -> outcome.pleural_effusion (yesno) empyema -> outcome.empyema (yesno) discharge_destination -> outcome.discharge_to (list) icu -> outcome.admitted_icu (yesno) niv -> outcome.non_invasive_ventilation (yesno) intubation -> outcome.intubation (yesno) recurrent_pneumonia -> outcome.recurrent_pneumonia (yesno) ecmo -> outcome.received_ecmo (yesno) inotropes -> outcome.received_ionotropes (yesno) trachy -> outcome.tracheostomy (yesno) inpatient_death -> outcome.inpatient_death (yesno) death_30days -> outcome.death_within_30_days (yesno) death_1year -> outcome.death_within_1_year (yesno) survival_days -> outcome.survival_duration (name) albumin -> haem.albumin (double) wcc -> haem.white_cell_count (double) hb -> haem.haemoglobin (double) pmn -> haem.neutrophils (double) lymphocytes -> haem.lymphocytes (double) crp -> haem.crp (double) na_result -> haem.sodium (double) ur_result -> haem.urea (double) egfr -> haem.egfr (double) creatinine -> haem.creatinine (double) cxr_sides -> radio.cxr_infection (list) cxr_lobes -> radio.cxr_lobar_changes (list) death_5year -> outcome.death_within_5_years (yesno) survival_days_2 -> outcome.5_yr_survival_duration (name) imd_decile -> demog.imd_decile (name)","code":""},{"path":"/reference/map_avoncap_pneumococcal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalise the avoncap pneumococcal data — map_avoncap_pneumococcal","text":"","code":"map_avoncap_pneumococcal()"},{"path":"/reference/map_avoncap_pneumococcal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalise the avoncap pneumococcal data — map_avoncap_pneumococcal","text":"list","code":""},{"path":"/reference/map_avoncap_radio.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalise the avoncap data radiology data — map_avoncap_radio","title":"Normalise the avoncap data radiology data — map_avoncap_radio","text":"radio_exam -> radio.test_performed (yesno) radiology_date -> radio.test_date (date) radiodays -> radio.test_days_from_admission (name) radio_test -> radio.test_type (list) radiology_result -> radio.alrtd_finding (checkboxes_to_nested_list) radiology_other_result -> radio.non_alrtd_finding (checkboxes_to_nested_list) record_number -> admin.record_number (name) ac_study_number -> admin.consented_record_number (study_id)","code":""},{"path":"/reference/map_avoncap_radio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalise the avoncap data radiology data — map_avoncap_radio","text":"","code":"map_avoncap_radio(instrument)"},{"path":"/reference/map_avoncap_radio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalise the avoncap data radiology data — map_avoncap_radio","text":"list","code":""},{"path":"/reference/map_avoncap_virol.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalise the avoncap data virology data — map_avoncap_virol","title":"Normalise the avoncap data virology data — map_avoncap_virol","text":"viral_testing_performed -> virol.test_performed (yesno) virology_date_of_asst -> virol.test_date (date) viroldays -> virol.test_days_from_admission (name) specimen_type -> virol.test_type (list) virus_isolated -> virol.pathogen_detected (yesno) test_type -> virol.test_type (list) virus_pathogen -> virol.pathogen (checkboxes_to_nested_list) virol_patient_lab -> virol.test_provenance (list) record_number -> admin.record_number (name) ac_study_number -> admin.consented_record_number (study_id)","code":""},{"path":"/reference/map_avoncap_virol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalise the avoncap data virology data — map_avoncap_virol","text":"","code":"map_avoncap_virol(instrument)"},{"path":"/reference/map_avoncap_virol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalise the avoncap data virology data — map_avoncap_virol","text":"list","code":""},{"path":"/reference/map_urine_antigens.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalise the urinary antigen data — map_urine_antigens","title":"Normalise the urinary antigen data — map_urine_antigens","text":"RESULT -> pneumo.urine_antigen_result (text) EVENT_DATE -> pneumo.test_date (date) ANALYSIS -> pneumo.urine_antigen_test (name) SUBJECT -> admin.consented_record_number (study_id) BARCODE -> pneumo.urine_antigen_sample_id (name)","code":""},{"path":"/reference/map_urine_antigens.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalise the urinary antigen data — map_urine_antigens","text":"","code":"map_urine_antigens()"},{"path":"/reference/map_urine_antigens.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalise the urinary antigen data — map_urine_antigens","text":"list","code":""},{"path":"/reference/map_urine_binax.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalise the urinary antigen data (binax results) — map_urine_binax","title":"Normalise the urinary antigen data (binax results) — map_urine_binax","text":"RESULT -> pneumo.binax_result (text) EVENT_DATE -> pneumo.test_date (date) SUBJECT -> admin.consented_record_number (study_id) BARCODE -> pneumo.urine_antigen_sample_id (name)","code":""},{"path":"/reference/map_urine_binax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalise the urinary antigen data (binax results) — map_urine_binax","text":"","code":"map_urine_binax()"},{"path":"/reference/map_urine_binax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalise the urinary antigen data (binax results) — map_urine_binax","text":"list","code":""},{"path":"/reference/most_recent_files.html","id":null,"dir":"Reference","previous_headings":"","what":"find most recent files of a specific type — most_recent_files","title":"find most recent files of a specific type — most_recent_files","text":"find recent files specific type","code":""},{"path":"/reference/most_recent_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"find most recent files of a specific type — most_recent_files","text":"","code":"most_recent_files(   type = \"\",   subtype = NULL,   reproduce_at = as.Date(getOption(\"reproduce.at\", default = Sys.Date())) )"},{"path":"/reference/most_recent_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"find most recent files of a specific type — most_recent_files","text":"type see valid_inputs() current list supported types input directory subtype see valid_inputs() list supported filenames reproduce_at date new files ignored. enforces specific version data.","code":""},{"path":"/reference/most_recent_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"find most recent files of a specific type — most_recent_files","text":"list file paths date files given type relevant site study year","code":""},{"path":"/reference/most_recent_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"find most recent files of a specific type — most_recent_files","text":"","code":"# devtools::load_all()  avoncap::set_input(\"~/Data/avoncap\") #> Found data directory: /home/vp22681/Data/avoncap #> /home/vp22681/Data/avoncap avoncap::input(\"nhs-extract\") #> /home/vp22681/Data/avoncap/nhs-extract  avoncap::all_files() #> # A tibble: 57 × 7 #>    filename     directory     path       date       hospital study_year filetype #>    <chr>        <chr>         <fs::path> <date>     <chr>         <int> <chr>    #>  1 central_y1   avoncap-expo… …al_y1.csv 2022-03-22 NA                1 csv      #>  2 central_y2   avoncap-expo… …al_y2.csv 2022-03-22 NA                2 csv      #>  3 central_y1   avoncap-expo… …al_y1.csv 2022-06-20 NA                1 csv      #>  4 central_y2   avoncap-expo… …al_y2.csv 2022-06-20 NA                2 csv      #>  5 central_y1   avoncap-expo… …al_y1.csv 2022-07-11 NA                1 csv      #>  6 central_y2   avoncap-expo… …al_y2.csv 2022-07-11 NA                2 csv      #>  7 central_y1   avoncap-expo… …al_y1.csv 2022-09-21 NA                1 csv      #>  8 central_y2   avoncap-expo… …al_y2.csv 2022-09-21 NA                2 csv      #>  9 uad-controls avoncap-expo… …trols.csv 2022-10-07 NA               NA csv      #> 10 central_y1   avoncap-expo… …al_y1.csv 2022-11-09 NA                1 csv      #> # ℹ 47 more rows   # exact match on filename column of all_data() avoncap::most_recent_files(\"AvonCAPLRTDCentralDa\") #> # A tibble: 0 × 7 #> # ℹ 7 variables: filename <chr>, directory <chr>, path <fs::path>, date <date>, #> #   hospital <chr>, study_year <int>, filetype <chr>   # or matches by lower case startWith on directory avoncap::most_recent_files(\"nhs-extract\",\"deltave\") #> # A tibble: 6 × 7 #>   filename       directory   path        date       hospital study_year filetype #>   <chr>          <chr>       <fs::path>  <date>     <chr>         <int> <chr>    #> 1 deltave_BRI_y1 nhs-extract …BRI_y1.csv 2022-12-07 BRI               1 csv      #> 2 deltave_BRI_y2 nhs-extract …BRI_y2.csv 2022-12-07 BRI               2 csv      #> 3 deltave_BRI_y3 nhs-extract …BRI_y3.csv 2022-12-07 BRI               3 csv      #> 4 deltave_NBT_y1 nhs-extract …NBT_y1.csv 2022-12-07 NBT               1 csv      #> 5 deltave_NBT_y2 nhs-extract …NBT_y2.csv 2022-12-07 NBT               2 csv      #> 6 deltave_NBT_y3 nhs-extract …NBT_y3.csv 2022-12-07 NBT               3 csv        avoncap::most_recent_files(\"metadata\") #> # A tibble: 5 × 7 #>   filename     directory path            date       hospital study_year filetype #>   <chr>        <chr>     <fs::path>      <date>     <chr>         <int> <chr>    #> 1 central_y1   metadata  …central_y1.csv 2022-10-24 NA                1 csv      #> 2 central_y2   metadata  …central_y2.csv 2022-10-24 NA                2 csv      #> 3 central_y3   metadata  …central_y3.csv 2022-10-24 NA                3 csv      #> 4 uad-controls metadata  …d-controls.csv 2022-10-24 NA               NA csv      #> 5 pneumococcal metadata  …eumococcal.csv 2022-11-29 NA               NA csv       avoncap::valid_inputs() #> # A tibble: 21 × 3 #> # Groups:   type [6] #>    type           subtype      file         #>    <chr>          <chr>        <chr>        #>  1 avoncap-export central      central_y1   #>  2 avoncap-export central      central_y2   #>  3 avoncap-export uad-controls uad-controls #>  4 avoncap-export central      central_y3   #>  5 ethnicity      NA           y1           #>  6 ethnicity      NA           y2           #>  7 metadata       central      central_y1   #>  8 metadata       central      central_y2   #>  9 metadata       central      central_y3   #> 10 metadata       uad-controls uad-controls #> # ℹ 11 more rows"},{"path":"/reference/normalise_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanitise AvonCap data columns — normalise_data","title":"Sanitise AvonCap data columns — normalise_data","text":"AvonCap data lots columns named difficult remember fashion, composed data items enumerated values semantics. makes displaying difficult filtering done raw data inscrutable. Depending source data different columns may present due differences NHS UoB data sets. redcap database options may checklists radio buttons, end mysterious names data.","code":""},{"path":"/reference/normalise_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanitise AvonCap data columns — normalise_data","text":"","code":"normalise_data(rawData, instrument = NULL, ...)"},{"path":"/reference/normalise_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanitise AvonCap data columns — normalise_data","text":"rawData raw data load_data() ... Arguments passed normalise_generic remove_mapped gets rid original columns mapping (leaving new versions) remove_unmapped gets rid columns mapping mappings set mappings (see zzz-avoncap-mappings.R) messages set dtrackr glue specs populate first box fo flow chart. (can use {files}, {reproduce_at}, {date}, {.total}) data_source_info null filename, function write file details input files used.","code":""},{"path":"/reference/normalise_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sanitise AvonCap data columns — normalise_data","text":"tracked dataframe ","code":""},{"path":"/reference/normalise_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sanitise AvonCap data columns — normalise_data","text":"function maps data tidy dataframe consistently named columns, named factors appropriate. present data ethnicity files sanitisation code held zzz-avoncap-mappings.R file.","code":""},{"path":"/reference/normalise_generic.html","id":null,"dir":"Reference","previous_headings":"","what":"Sanitise RedCap data columns — normalise_generic","title":"Sanitise RedCap data columns — normalise_generic","text":"redcap database options may checklists radio buttons, end mysterious names data.","code":""},{"path":"/reference/normalise_generic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sanitise RedCap data columns — normalise_generic","text":"","code":"normalise_generic(   rawData,   mappings,   remove_mapped = TRUE,   remove_unmapped = TRUE,   messages = c(\"files: {files}\", \"{.total} rows\", \"files from: {date}\"),   data_source_info = NULL,   ... )"},{"path":"/reference/normalise_generic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sanitise RedCap data columns — normalise_generic","text":"rawData raw data load_data() mappings set mappings (see zzz-avoncap-mappings.R) remove_mapped gets rid original columns mapping (leaving new versions) remove_unmapped gets rid columns mapping messages set dtrackr glue specs populate first box fo flow chart. (can use {files}, {reproduce_at}, {date}, {.total}) data_source_info null filename, function write file details input files used. ... passed onto .cached(...). e.g. nocache = TRUE can used defeat caching.","code":""},{"path":"/reference/normalise_generic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sanitise RedCap data columns — normalise_generic","text":"tracked dataframe ","code":""},{"path":"/reference/normalise_generic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sanitise RedCap data columns — normalise_generic","text":"function maps data tidy dataframe consistently named columns, named factors appropriate. present data ethnicity","code":""},{"path":"/reference/original_field_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the mapping of transformed columns back to original — original_field_names","title":"Get the mapping of transformed columns back to original — original_field_names","text":"Get mapping transformed columns back original","code":""},{"path":"/reference/original_field_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the mapping of transformed columns back to original — original_field_names","text":"","code":"original_field_names(data, inverse = TRUE)"},{"path":"/reference/original_field_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the mapping of transformed columns back to original — original_field_names","text":"data transformed data set. inverse give data old -> new mapping finding normalised names original columns. false gives new->old finding original names normalised columns","code":""},{"path":"/reference/original_field_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the mapping of transformed columns back to original — original_field_names","text":"named list mapping original new columns","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/readable_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a label for a column — readable_label","title":"Get a label for a column — readable_label","text":"Get label column","code":""},{"path":"/reference/readable_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a label for a column — readable_label","text":"","code":"readable_label(columnVar, colNames = default_column_names())"},{"path":"/reference/readable_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a label for a column — readable_label","text":"columnVar column name string colNames bespoke column names mapping (see default_column_names(...))","code":""},{"path":"/reference/readable_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a label for a column — readable_label","text":"mapped column name","code":""},{"path":"/reference/readable_label_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a readable label for the AvonCap data as a named list (for ggplot) — readable_label_mapping","title":"Get a readable label for the AvonCap data as a named list (for ggplot) — readable_label_mapping","text":"Get readable label AvonCap data named list (ggplot)","code":""},{"path":"/reference/readable_label_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a readable label for the AvonCap data as a named list (for ggplot) — readable_label_mapping","text":"","code":"readable_label_mapping(x, ...)  # S3 method for data.frame readable_label_mapping(x, colNames = default_column_names(...), ...)  # S3 method for list readable_label_mapping(x, colNames = default_column_names(...), ...)  # S3 method for character readable_label_mapping(x, colNames = default_column_names(...), ...)  # S3 method for default readable_label_mapping(x, colNames = default_column_names(...), ...)"},{"path":"/reference/readable_label_mapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a readable label for the AvonCap data as a named list (for ggplot) — readable_label_mapping","text":"x either column names strings, dataframe ... ignored colNames mapping convert column name (string) readable label","code":""},{"path":"/reference/readable_label_mapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a readable label for the AvonCap data as a named list (for ggplot) — readable_label_mapping","text":"named list labels columns","code":""},{"path":"/reference/readable_label_mapping.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get a readable label for the AvonCap data as a named list (for ggplot) — readable_label_mapping","text":"readable_label_mapping(data.frame): data frames readable_label_mapping(list): lists readable_label_mapping(character): character vectors readable_label_mapping(default): defaults","code":""},{"path":"/reference/save_data_source_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Write file source information out to a text files — save_data_source_info","title":"Write file source information out to a text files — save_data_source_info","text":"Write file source information text files","code":""},{"path":"/reference/save_data_source_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write file source information out to a text files — save_data_source_info","text":"","code":"save_data_source_info(..., .file)"},{"path":"/reference/save_data_source_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write file source information out to a text files — save_data_source_info","text":"... list data frames loaded load_data(...) call .file output file location","code":""},{"path":"/reference/save_data_source_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write file source information out to a text files — save_data_source_info","text":"file name written (invisibly)","code":""},{"path":"/reference/set_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the location of data for an analysis — set_input","title":"Sets the location of data for an analysis — set_input","text":"Also performs structure checks makes sure README files place.","code":""},{"path":"/reference/set_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the location of data for an analysis — set_input","text":"","code":"set_input(path)"},{"path":"/reference/set_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the location of data for an analysis — set_input","text":"path path input directory","code":""},{"path":"/reference/set_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the location of data for an analysis — set_input","text":"full path directory","code":""},{"path":"/reference/stacked_barplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Stacked bar plot — stacked_barplot","title":"Stacked bar plot — stacked_barplot","text":"function plots stacked bar proportions input set data","code":""},{"path":"/reference/stacked_barplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stacked bar plot — stacked_barplot","text":"","code":"stacked_barplot(data, mapping, ...)"},{"path":"/reference/stacked_barplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stacked bar plot — stacked_barplot","text":"data data mapping aes mapping least x fill. facetting group must contain facet variable ... passed geom_bar","code":""},{"path":"/reference/stacked_barplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stacked bar plot — stacked_barplot","text":"ggplot","code":""},{"path":"/reference/stacked_barplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stacked bar plot — stacked_barplot","text":"","code":"stacked_barplot(diamonds, aes(x=cut, fill=clarity, group=color))+facet_wrap(vars(color)) #> Error in ensym(denom): could not find function \"ensym\""},{"path":"/reference/start_date_of_week.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a study week back into a date — start_date_of_week","title":"Convert a study week back into a date — start_date_of_week","text":"poorly named give start date input integer","code":""},{"path":"/reference/start_date_of_week.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a study week back into a date — start_date_of_week","text":"","code":"start_date_of_week(study_week)"},{"path":"/reference/start_date_of_week.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a study week back into a date — start_date_of_week","text":"study_week accept decimals returns nearest whole date value","code":""},{"path":"/reference/start_date_of_week.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a study week back into a date — start_date_of_week","text":"vector sudy_week numbers","code":""},{"path":"/reference/study_week.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a date to a study week — study_week","title":"Convert a date to a study week — study_week","text":"Convert date study week","code":""},{"path":"/reference/study_week.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a date to a study week — study_week","text":"","code":"study_week(dates)"},{"path":"/reference/study_week.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a date to a study week — study_week","text":"dates list date objects","code":""},{"path":"/reference/study_week.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a date to a study week — study_week","text":"integer number weeks since 2019-12-30","code":""},{"path":"/reference/upset_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Upset plot with counts stratified by a categorical column — upset_plot","title":"Upset plot with counts stratified by a categorical column — upset_plot","text":"Upset plot counts stratified categorical column","code":""},{"path":"/reference/upset_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upset plot with counts stratified by a categorical column — upset_plot","text":"","code":"upset_plot(df, boolean_cols, categorical_col, lbl_size = 5)"},{"path":"/reference/upset_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upset plot with counts stratified by a categorical column — upset_plot","text":"df data boolean_cols tidyselect specification selecting columns used binary one-hot encoded classes categorical_col column containing disjoint category factor lbl_size font sise label","code":""},{"path":"/reference/upset_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upset plot with counts stratified by a categorical column — upset_plot","text":"ggplot","code":""},{"path":"/reference/valid_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"A valid set of types of file that can be loaded by load_data(...) — valid_inputs","title":"A valid set of types of file that can be loaded by load_data(...) — valid_inputs","text":"valid set types file can loaded load_data(...)","code":""},{"path":"/reference/valid_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A valid set of types of file that can be loaded by load_data(...) — valid_inputs","text":"","code":"valid_inputs()"},{"path":"/reference/valid_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A valid set of types of file that can be loaded by load_data(...) — valid_inputs","text":"dataframe type, subtype","code":""},{"path":"/reference/valid_inputs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A valid set of types of file that can be loaded by load_data(...) — valid_inputs","text":"","code":"# devtools::load_all()  avoncap::set_input(\"~/Data/avoncap\") #> Found data directory: /home/vp22681/Data/avoncap #> /home/vp22681/Data/avoncap avoncap::input(\"nhs-extract\") #> /home/vp22681/Data/avoncap/nhs-extract  avoncap::all_files() #> # A tibble: 57 × 7 #>    filename     directory     path       date       hospital study_year filetype #>    <chr>        <chr>         <fs::path> <date>     <chr>         <int> <chr>    #>  1 central_y1   avoncap-expo… …al_y1.csv 2022-03-22 NA                1 csv      #>  2 central_y2   avoncap-expo… …al_y2.csv 2022-03-22 NA                2 csv      #>  3 central_y1   avoncap-expo… …al_y1.csv 2022-06-20 NA                1 csv      #>  4 central_y2   avoncap-expo… …al_y2.csv 2022-06-20 NA                2 csv      #>  5 central_y1   avoncap-expo… …al_y1.csv 2022-07-11 NA                1 csv      #>  6 central_y2   avoncap-expo… …al_y2.csv 2022-07-11 NA                2 csv      #>  7 central_y1   avoncap-expo… …al_y1.csv 2022-09-21 NA                1 csv      #>  8 central_y2   avoncap-expo… …al_y2.csv 2022-09-21 NA                2 csv      #>  9 uad-controls avoncap-expo… …trols.csv 2022-10-07 NA               NA csv      #> 10 central_y1   avoncap-expo… …al_y1.csv 2022-11-09 NA                1 csv      #> # ℹ 47 more rows   # exact match on filename column of all_data() avoncap::most_recent_files(\"AvonCAPLRTDCentralDa\") #> # A tibble: 0 × 7 #> # ℹ 7 variables: filename <chr>, directory <chr>, path <fs::path>, date <date>, #> #   hospital <chr>, study_year <int>, filetype <chr>   # or matches by lower case startWith on directory avoncap::most_recent_files(\"nhs-extract\",\"deltave\") #> # A tibble: 6 × 7 #>   filename       directory   path        date       hospital study_year filetype #>   <chr>          <chr>       <fs::path>  <date>     <chr>         <int> <chr>    #> 1 deltave_BRI_y1 nhs-extract …BRI_y1.csv 2022-12-07 BRI               1 csv      #> 2 deltave_BRI_y2 nhs-extract …BRI_y2.csv 2022-12-07 BRI               2 csv      #> 3 deltave_BRI_y3 nhs-extract …BRI_y3.csv 2022-12-07 BRI               3 csv      #> 4 deltave_NBT_y1 nhs-extract …NBT_y1.csv 2022-12-07 NBT               1 csv      #> 5 deltave_NBT_y2 nhs-extract …NBT_y2.csv 2022-12-07 NBT               2 csv      #> 6 deltave_NBT_y3 nhs-extract …NBT_y3.csv 2022-12-07 NBT               3 csv        avoncap::most_recent_files(\"metadata\") #> # A tibble: 5 × 7 #>   filename     directory path            date       hospital study_year filetype #>   <chr>        <chr>     <fs::path>      <date>     <chr>         <int> <chr>    #> 1 central_y1   metadata  …central_y1.csv 2022-10-24 NA                1 csv      #> 2 central_y2   metadata  …central_y2.csv 2022-10-24 NA                2 csv      #> 3 central_y3   metadata  …central_y3.csv 2022-10-24 NA                3 csv      #> 4 uad-controls metadata  …d-controls.csv 2022-10-24 NA               NA csv      #> 5 pneumococcal metadata  …eumococcal.csv 2022-11-29 NA               NA csv       avoncap::valid_inputs() #> # A tibble: 21 × 3 #> # Groups:   type [6] #>    type           subtype      file         #>    <chr>          <chr>        <chr>        #>  1 avoncap-export central      central_y1   #>  2 avoncap-export central      central_y2   #>  3 avoncap-export uad-controls uad-controls #>  4 avoncap-export central      central_y3   #>  5 ethnicity      NA           y1           #>  6 ethnicity      NA           y2           #>  7 metadata       central      central_y1   #>  8 metadata       central      central_y2   #>  9 metadata       central      central_y3   #> 10 metadata       uad-controls uad-controls #> # ℹ 11 more rows"},{"path":"/reference/xglimpse.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper around table — xglimpse","title":"Wrapper around table — xglimpse","text":"Wrapper around table","code":""},{"path":"/reference/xglimpse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper around table — xglimpse","text":"","code":"xglimpse(data, ...)"},{"path":"/reference/xglimpse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper around table — xglimpse","text":"data dataframe ... columns cross-tabulate","code":""},{"path":"/reference/xglimpse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper around table — xglimpse","text":"cross-tabulation","code":""}]
